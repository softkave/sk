[{"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\index.tsx":"1","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\store.ts":"2","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\app\\Main.tsx":"3","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\key-value\\reducer.ts":"4","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\blocks\\reducer.ts":"5","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\notifications\\reducer.ts":"6","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\rooms\\reducer.ts":"7","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\session\\reducer.ts":"8","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\reducer.ts":"9","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\sprints\\reducer.ts":"10","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\users\\reducer.ts":"11","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\blocks\\actions.ts":"12","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\actions.ts":"13","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\key-value\\actions.ts":"14","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\notifications\\actions.ts":"15","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\key-value\\selectors.ts":"16","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\session\\actions.ts":"17","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\key-value\\types.ts":"18","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\rooms\\actions.ts":"19","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\session\\types.ts":"20","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\session\\selectors.ts":"21","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\users\\actions.ts":"22","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\session\\initializeAppSession.ts":"23","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\utils\\utils.ts":"24","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\seedDemoData.ts":"25","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\appHome\\path.ts":"26","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\socket.ts":"27","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\app\\ExistentialRenderer.tsx":"28","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\app\\Routes.tsx":"29","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\appHome\\AppHomeContainer.tsx":"30","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\styled\\Container.tsx":"31","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\utils.ts":"32","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\sprints\\actions.ts":"33","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\chat\\getUserRoomsAndChats.ts":"34","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\users\\selectors.ts":"35","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\OperationType.ts":"36","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\operation.ts":"37","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\utils\\cast.ts":"38","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\selectors.ts":"39","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\user\\user.ts":"40","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\storage\\userSession.ts":"41","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\notification\\notification.ts":"42","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\block\\utils.ts":"43","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\block\\block.ts":"44","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\session\\logoutUser.ts":"45","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incomingEventTypes.ts":"46","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleUpdateSprintEvent.ts":"47","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleUserUpdateEvent.ts":"48","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleRoomReadCounterEvent.ts":"49","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleUpdateNotificationsEvent.ts":"50","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleStartSprintEvent.ts":"51","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\appHome\\AppHome.tsx":"52","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleNewUserCollaborationRequestEvent.ts":"53","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleOrgCollaborationRequestEvent.ts":"54","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleEndSprintEvent.ts":"55","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleNewSprintEvent.ts":"56","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleNewRoomEvent.ts":"57","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleNewMessageEvent.ts":"58","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleDeleteSprintEvent.ts":"59","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleConnectEvent.ts":"60","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleDisconnectEvent.ts":"61","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleBlockUpdateEvent.ts":"62","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\signup\\SignupContainer.tsx":"63","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\web\\web1\\Web.tsx":"64","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\web\\web0\\WebHeader.tsx":"65","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\addr.ts":"66","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\login\\LoginContainer.tsx":"67","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\password\\ForgotPasswordContainer.tsx":"68","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\password\\ChangePasswordWithTokenContainer.tsx":"69","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\outgoing\\subscribeEvent.ts":"70","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\chat\\chat.ts":"71","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\chat\\utils.ts":"72","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\user\\schema.ts":"73","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\utils.ts":"74","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\utils\\extract.ts":"75","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\utils\\storage.ts":"76","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\query.ts":"77","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\auth.ts":"78","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\outgoing\\unsubscribeEvent.ts":"79","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\rooms\\selectors.ts":"80","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\sprints\\selectors.ts":"81","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleAuthEvent.ts":"82","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\outgoingEventTypes.ts":"83","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\block\\deleteBlock.ts":"84","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\notification\\loadUserNotifications.ts":"85","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\block\\loadOrgData.ts":"86","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\sprint\\addSprint.ts":"87","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\block\\updateBlock.ts":"88","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\appHome\\UserOptionsMenu.tsx":"89","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\hooks\\useOperation.ts":"90","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\appHome\\HeaderMobile.tsx":"91","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\RenderForDevice.tsx":"92","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\appHome\\AppHomeDesktop.tsx":"93","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\session\\changePassword.ts":"94","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\signup\\Signup.tsx":"95","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\session\\requestForgotPassword.ts":"96","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\session\\loginUser.ts":"97","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\org\\OrgsListContainer.tsx":"98","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\org\\EditOrgFormInDrawer.tsx":"99","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\feedback\\FeedbackFormModal.tsx":"100","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\OrgBoardContainer.tsx":"101","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\notification\\Notification.tsx":"102","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\password\\ChangePassword.tsx":"103","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\password\\ForgotPassword.tsx":"104","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\login\\Login.tsx":"105","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\fragments.ts":"106","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\rooms\\utils.ts":"107","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\block\\schema.ts":"108","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\serverRecommendedActions.ts":"109","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\utils\\log.ts":"110","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleFetchMissingBroadcastsEvent.ts":"111","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\outgoing\\fetchMissingBroadcastsEvent.ts":"112","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\block\\transferBlock.ts":"113","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\blocks\\selectors.ts":"114","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\block\\block.ts":"115","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\theme.ts":"116","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\hooks\\useFormHelpers.ts":"117","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\forms\\formik-utils.ts":"118","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\appHome\\HeaderMobileMenu.tsx":"119","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\appHome\\AppHomeDesktopMenu.tsx":"120","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\forms\\FormStyledComponents.tsx":"121","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\forms\\FormError.tsx":"122","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\user\\constants.ts":"123","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\user\\validation.ts":"124","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\notification\\respondToNotification.ts":"125","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\collaborator\\utils.ts":"126","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\EmptyMessage.tsx":"127","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\collaborator\\CollaborationRequestStatus.tsx":"128","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\hooks\\useObject.ts":"129","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\ItemAvatar.tsx":"130","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\utilities\\SpaceOut.tsx":"131","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\forms\\FormMessage.tsx":"132","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\notification\\utils.ts":"133","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\user\\userErrorMessages.js":"134","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\notifications\\selectors.ts":"135","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\utils.ts":"136","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\useLoadOrgData.ts":"137","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\hooks\\useBlockParents.ts":"138","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\block\\loadRootBlocks.ts":"139","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\utils.ts":"140","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\BoardFormInDrawer.tsx":"141","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\OrgBoard.tsx":"142","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\utilities\\LoadingEllipsis.tsx":"143","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\sprint\\sprint.ts":"144","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\collaborator\\AddCollaboratorFormInDrawer.tsx":"145","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\feedback\\FeedbackFormContainer.tsx":"146","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\withDrawer.tsx":"147","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\org\\EditOrgFormContainer.tsx":"148","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\org\\OrgsMain.tsx":"149","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\block\\confirmBlockDelete.tsx":"150","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\session\\signupUser.ts":"151","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\block\\addBlock.ts":"152","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\sprint\\deleteSprint.ts":"153","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\chat\\sendMessage.ts":"154","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\sprint\\endSprint.ts":"155","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\web\\web1\\Bottom.tsx":"156","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\web\\web1\\Face.tsx":"157","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\sprint\\startSprint.ts":"158","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\hooks\\useBlockChildrenTypes.ts":"159","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\sprint\\schema.ts":"160","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\utils\\window.ts":"161","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\system\\sendFeedback.ts":"162","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\OrgBoardHeader.tsx":"163","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\LoadBlockChildren.tsx":"164","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\BoardFormContainer.tsx":"165","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\BoardTypeList.tsx":"166","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\BlockContainer.tsx":"167","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\BoardContainer.tsx":"168","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\org\\OrgsListHeader.tsx":"169","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\utilities\\Scrollbar.tsx":"170","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\collaborator\\AddCollaboratorFormContainer.tsx":"171","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\feedback\\FeedbackForm.tsx":"172","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\feedback\\FeedbackSentMessage.tsx":"173","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\org\\EditOrgForm.tsx":"174","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\org\\OrgsList.tsx":"175","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\chat\\ChatRoomsContainer.tsx":"176","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\chat\\ChatRoom.tsx":"177","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\web\\web1\\constants.ts":"178","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\web\\web1\\IconLink.tsx":"179","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\block\\loadBlockChildren.ts":"180","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\sprint\\getSprints.ts":"181","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\userAgent.ts":"182","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\block\\constants.ts":"183","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\block\\addCollaborators.ts":"184","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\feedback\\utils.ts":"185","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\block\\blockErrorMessages.ts":"186","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\block\\validation.ts":"187","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\system\\api.ts":"188","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\sprint\\utils.ts":"189","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\chat\\updateRoomReadCounter.ts":"190","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\BoardForm.tsx":"191","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\block\\BlockThumnail.tsx":"192","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\OrgHeaderOptionsMenu.tsx":"193","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\RenderBlockChildren.tsx":"194","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\utilities\\InputSearchIcon.tsx":"195","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\Board.tsx":"196","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\collaborator\\AddCollaboratorForm.tsx":"197","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\utilities\\InputWithControls.tsx":"198","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\org\\OrgExistsMessage.tsx":"199","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\forms\\ColorPicker.tsx":"200","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\org\\OrgCollaborationRequestThumbnail.tsx":"201","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\chat\\ChatList.tsx":"202","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\chat\\ChatRoomHeader.tsx":"203","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\chat\\ChatInput.tsx":"204","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\validationErrorMessages.js":"205","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\system\\schema.ts":"206","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\sprint\\constants.ts":"207","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\notification\\constants.ts":"208","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\notification\\notificationErrorMessages.ts":"209","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\MenuWithTrigger.tsx":"210","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\chat\\RoomsList.tsx":"211","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\collaborator\\CollaborationRequests.tsx":"212","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\collaborator\\CollaboratorList.tsx":"213","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\BoardList.tsx":"214","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\BoardHeader.tsx":"215","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\BoardStatusResolutionAndLabelsForm.tsx":"216","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\SprintsContainer.tsx":"217","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\TasksContainer.tsx":"218","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\CurrentSprintHeader.tsx":"219","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\GroupedTasks.tsx":"220","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\BoardHeaderOptionsMenu.tsx":"221","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\collaborator\\AddCollaboratorFormItem.tsx":"222","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\utilities\\Editable.tsx":"223","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\sprint\\SprintFormInDrawer.tsx":"224","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\sprint\\SprintOptionsFormInDrawer.tsx":"225","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\TaskFormInDrawer.tsx":"226","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\chat\\Chat.tsx":"227","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\sprint\\types.ts":"228","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\utilities\\layout.ts":"229","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\utilities\\handleOpResult.ts":"230","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\utils\\groupByLabels.ts":"231","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\utils\\groupByAssignees.ts":"232","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\utils\\groupByStatus.ts":"233","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\utilities\\wrapMenu.tsx":"234","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\chat\\RoomsListItem.tsx":"235","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\collaborator\\CollaborationRequestThumbnail.tsx":"236","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\collaborator\\CollaboratorThumbnail.tsx":"237","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\styled\\List.tsx":"238","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\SearchTasksInput.tsx":"239","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\block\\BlockList.tsx":"240","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\GroupedTasksDesktop.tsx":"241","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\Sprints.tsx":"242","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\GroupedTasksMobile.tsx":"243","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\sprint\\SprintFormContainer.tsx":"244","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\sprint\\SprintOptionsFormContainer.tsx":"245","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\label\\LabelListContainer.tsx":"246","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\status\\StatusListContainer.tsx":"247","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\status\\ResolutionsListContainer.tsx":"248","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\TaskFormContainer.tsx":"249","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\utils\\groupBySprints.ts":"250","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\sprint\\updateSprint.ts":"251","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\sprint\\updateSprintOptions.ts":"252","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\sprint\\setupSprints.ts":"253","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\hooks\\useBlockPossibleParents.ts":"254","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\styled\\cloneWithWidth.tsx":"255","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\TaskList.tsx":"256","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\Column.tsx":"257","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\sprint\\SprintOptionsForm.tsx":"258","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\sprint\\SprintForm.tsx":"259","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\status\\ResolutionsList.tsx":"260","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\label\\LabelList.tsx":"261","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\status\\StatusList.tsx":"262","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\TaskForm.tsx":"263","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\block\\sortBlocks.ts":"264","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\label\\validation.ts":"265","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\forms\\utils.ts":"266","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\sprint\\utils.ts":"267","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\hooks\\useArray.ts":"268","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\Task.tsx":"269","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\status\\ResolutionFormItem.tsx":"270","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\label\\LabelFormItem.tsx":"271","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\status\\StatusFormItem.tsx":"272","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\block\\BlockParentSelection.tsx":"273","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\SubTaskFormList.tsx":"274","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\TaskLabels.tsx":"275","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\SelectTaskSprint.tsx":"276","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\TaskCollaboratorThumbnail.tsx":"277","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\EditPriority.tsx":"278","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\TaskStatus.tsx":"279","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\Priority.tsx":"280","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\TaskNameAndDescription.tsx":"281","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\TaskStatusContainer.tsx":"282","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\SelectTaskSprintContainer.tsx":"283","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\TaskThumbnailDueDate.tsx":"284","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\TaskThumbnailAssignees.tsx":"285","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\TaskSubTasksContainer.tsx":"286","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\SubTaskForm.tsx":"287","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\SelectResolutionModal.tsx":"288","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\TaskResolution.tsx":"289","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\TaskThumbnailSubTasks.tsx":"290","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\TaskSubTask.tsx":"291","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\Message.tsx":"292","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\MessageList.tsx":"293","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\user\\user.ts":"294","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\collaborator\\UserAvatar.tsx":"295","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\comments\\reducer.ts":"296","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\comments\\actions.ts":"297","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\chat\\constants.ts":"298","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\programAccessTokens\\reducer.ts":"299","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\programAccessTokens\\actions.ts":"300","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\comments\\selectors.ts":"301","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\comment\\constants.ts":"302","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\comments\\CommentsContainer.tsx":"303","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\comments\\loadTaskComments.ts":"304","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\comments\\addComment.ts":"305","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\comments\\TaskComments.tsx":"306","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\comments\\comment.ts":"307","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\comments\\CommentList.tsx":"308","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\comments\\CommentInput.tsx":"309","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\comments\\schema.ts":"310","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\comments\\Comment.tsx":"311","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\serviceWorkerRegistration.ts":"312","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\session\\updateClient.ts":"313","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\pushNotification\\api.ts":"314","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\app\\AppVisibility.tsx":"315","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\app\\types.ts":"316","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\pushNotification\\schema.ts":"317","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\appHome\\NotificationsPermissionContainer.tsx":"318","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\user\\UserSettings.tsx":"319","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\messages.ts":"320","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\appHome\\NotificationsPermission.tsx":"321","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\user\\UpdateUserDataFormContainer.tsx":"322","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\user\\NotificationSettingsContainer.tsx":"323","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\session\\updateUser.ts":"324","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\user\\UpdateUserDataForm.tsx":"325","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\user\\NotificationSettings.tsx":"326","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\user\\validation.ts":"327","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\user\\UpdateClientFormContainer.tsx":"328","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\user\\UpdateClientForm.tsx":"329"},{"size":575,"mtime":1620712461664,"results":"330","hashOfConfig":"331"},{"size":1189,"mtime":1619669575273,"results":"332","hashOfConfig":"331"},{"size":5258,"mtime":1620889280263,"results":"333","hashOfConfig":"331"},{"size":2065,"mtime":1604456176377,"results":"334","hashOfConfig":"331"},{"size":1363,"mtime":1594712675799,"results":"335","hashOfConfig":"331"},{"size":1669,"mtime":1594712675799,"results":"336","hashOfConfig":"331"},{"size":4741,"mtime":1610604081551,"results":"337","hashOfConfig":"331"},{"size":1134,"mtime":1620805244380,"results":"338","hashOfConfig":"331"},{"size":1206,"mtime":1610434406317,"results":"339","hashOfConfig":"331"},{"size":1326,"mtime":1603843657328,"results":"340","hashOfConfig":"331"},{"size":1710,"mtime":1594712675799,"results":"341","hashOfConfig":"331"},{"size":1075,"mtime":1593740263899,"results":"342","hashOfConfig":"331"},{"size":815,"mtime":1601104501375,"results":"343","hashOfConfig":"331"},{"size":718,"mtime":1602325069613,"results":"344","hashOfConfig":"331"},{"size":1349,"mtime":1593740263919,"results":"345","hashOfConfig":"331"},{"size":232,"mtime":1602325069617,"results":"346","hashOfConfig":"331"},{"size":700,"mtime":1621721821904,"results":"347","hashOfConfig":"331"},{"size":1082,"mtime":1620888490555,"results":"348","hashOfConfig":"331"},{"size":2025,"mtime":1610603921315,"results":"349","hashOfConfig":"331"},{"size":352,"mtime":1620713691181,"results":"350","hashOfConfig":"331"},{"size":1841,"mtime":1620804093779,"results":"351","hashOfConfig":"331"},{"size":1013,"mtime":1593740263969,"results":"352","hashOfConfig":"331"},{"size":2149,"mtime":1620800002375,"results":"353","hashOfConfig":"331"},{"size":11461,"mtime":1620800161970,"results":"354","hashOfConfig":"331"},{"size":26657,"mtime":1619669575243,"results":"355","hashOfConfig":"331"},{"size":376,"mtime":1604854667812,"results":"356","hashOfConfig":"331"},{"size":6900,"mtime":1620888929703,"results":"357","hashOfConfig":"331"},{"size":2454,"mtime":1620889333066,"results":"358","hashOfConfig":"331"},{"size":1787,"mtime":1606035738305,"results":"359","hashOfConfig":"331"},{"size":2067,"mtime":1604855953386,"results":"360","hashOfConfig":"331"},{"size":300,"mtime":1583429417515,"results":"361","hashOfConfig":"331"},{"size":6898,"mtime":1610088925027,"results":"362","hashOfConfig":"331"},{"size":1143,"mtime":1603843657328,"results":"363","hashOfConfig":"331"},{"size":5700,"mtime":1609983506081,"results":"364","hashOfConfig":"331"},{"size":512,"mtime":1593740263972,"results":"365","hashOfConfig":"331"},{"size":1961,"mtime":1620803589980,"results":"366","hashOfConfig":"331"},{"size":3774,"mtime":1619669575271,"results":"367","hashOfConfig":"331"},{"size":109,"mtime":1572039897516,"results":"368","hashOfConfig":"331"},{"size":3278,"mtime":1610434392053,"results":"369","hashOfConfig":"331"},{"size":6423,"mtime":1620803798753,"results":"370","hashOfConfig":"331"},{"size":1707,"mtime":1621671531517,"results":"371","hashOfConfig":"331"},{"size":1381,"mtime":1609718591471,"results":"372","hashOfConfig":"331"},{"size":3627,"mtime":1619669575240,"results":"373","hashOfConfig":"331"},{"size":13052,"mtime":1619669575237,"results":"374","hashOfConfig":"331"},{"size":1179,"mtime":1620885309917,"results":"375","hashOfConfig":"331"},{"size":3288,"mtime":1620805140538,"results":"376","hashOfConfig":"331"},{"size":523,"mtime":1606203099647,"results":"377","hashOfConfig":"331"},{"size":296,"mtime":1605631810935,"results":"378","hashOfConfig":"331"},{"size":1081,"mtime":1606203099646,"results":"379","hashOfConfig":"331"},{"size":503,"mtime":1605632507829,"results":"380","hashOfConfig":"331"},{"size":940,"mtime":1606203099646,"results":"381","hashOfConfig":"331"},{"size":5781,"mtime":1620887502017,"results":"382","hashOfConfig":"331"},{"size":496,"mtime":1606203099646,"results":"383","hashOfConfig":"331"},{"size":547,"mtime":1606203099646,"results":"384","hashOfConfig":"331"},{"size":932,"mtime":1606203099647,"results":"385","hashOfConfig":"331"},{"size":730,"mtime":1606203099646,"results":"386","hashOfConfig":"331"},{"size":2226,"mtime":1610605027970,"results":"387","hashOfConfig":"331"},{"size":1994,"mtime":1610606308197,"results":"388","hashOfConfig":"331"},{"size":935,"mtime":1606203099647,"results":"389","hashOfConfig":"331"},{"size":554,"mtime":1620888902829,"results":"390","hashOfConfig":"331"},{"size":828,"mtime":1605631750205,"results":"391","hashOfConfig":"331"},{"size":1217,"mtime":1609931402280,"results":"392","hashOfConfig":"331"},{"size":2069,"mtime":1620798040379,"results":"393","hashOfConfig":"331"},{"size":483,"mtime":1606510989223,"results":"394","hashOfConfig":"331"},{"size":4330,"mtime":1604088788613,"results":"395","hashOfConfig":"331"},{"size":432,"mtime":1598106461139,"results":"396","hashOfConfig":"331"},{"size":1527,"mtime":1609931178513,"results":"397","hashOfConfig":"331"},{"size":2021,"mtime":1606214605528,"results":"398","hashOfConfig":"331"},{"size":2550,"mtime":1605686263373,"results":"399","hashOfConfig":"331"},{"size":1391,"mtime":1606205462876,"results":"400","hashOfConfig":"331"},{"size":2040,"mtime":1606610511087,"results":"401","hashOfConfig":"331"},{"size":742,"mtime":1610604946574,"results":"402","hashOfConfig":"331"},{"size":4538,"mtime":1620799853386,"results":"403","hashOfConfig":"331"},{"size":3248,"mtime":1619669575245,"results":"404","hashOfConfig":"331"},{"size":4018,"mtime":1610172982730,"results":"405","hashOfConfig":"331"},{"size":2766,"mtime":1620886377495,"results":"406","hashOfConfig":"331"},{"size":3332,"mtime":1620713535467,"results":"407","hashOfConfig":"331"},{"size":933,"mtime":1620713476474,"results":"408","hashOfConfig":"331"},{"size":1964,"mtime":1606214458473,"results":"409","hashOfConfig":"331"},{"size":1067,"mtime":1602325069660,"results":"410","hashOfConfig":"331"},{"size":1911,"mtime":1603843657329,"results":"411","hashOfConfig":"331"},{"size":2337,"mtime":1606205462825,"results":"412","hashOfConfig":"331"},{"size":832,"mtime":1620889215072,"results":"413","hashOfConfig":"331"},{"size":4035,"mtime":1619669575264,"results":"414","hashOfConfig":"331"},{"size":2612,"mtime":1609983506128,"results":"415","hashOfConfig":"331"},{"size":8411,"mtime":1610605045166,"results":"416","hashOfConfig":"331"},{"size":4090,"mtime":1610000003794,"results":"417","hashOfConfig":"331"},{"size":8478,"mtime":1619669575268,"results":"418","hashOfConfig":"331"},{"size":1728,"mtime":1619669575189,"results":"419","hashOfConfig":"331"},{"size":5438,"mtime":1609197258141,"results":"420","hashOfConfig":"331"},{"size":1593,"mtime":1610943096442,"results":"421","hashOfConfig":"331"},{"size":686,"mtime":1577680409819,"results":"422","hashOfConfig":"331"},{"size":2119,"mtime":1619669575185,"results":"423","hashOfConfig":"331"},{"size":2111,"mtime":1620799993352,"results":"424","hashOfConfig":"331"},{"size":9127,"mtime":1620800019990,"results":"425","hashOfConfig":"331"},{"size":1852,"mtime":1609983128264,"results":"426","hashOfConfig":"331"},{"size":1980,"mtime":1620800019991,"results":"427","hashOfConfig":"331"},{"size":6298,"mtime":1619669575219,"results":"428","hashOfConfig":"331"},{"size":153,"mtime":1606037419136,"results":"429","hashOfConfig":"331"},{"size":234,"mtime":1606196400659,"results":"430","hashOfConfig":"331"},{"size":9084,"mtime":1609718591406,"results":"431","hashOfConfig":"331"},{"size":7240,"mtime":1609740083547,"results":"432","hashOfConfig":"331"},{"size":5198,"mtime":1609930877484,"results":"433","hashOfConfig":"331"},{"size":4877,"mtime":1609995713725,"results":"434","hashOfConfig":"331"},{"size":5031,"mtime":1609930877484,"results":"435","hashOfConfig":"331"},{"size":2700,"mtime":1621722408521,"results":"436","hashOfConfig":"331"},{"size":649,"mtime":1620800019990,"results":"437","hashOfConfig":"331"},{"size":3585,"mtime":1619669575250,"results":"438","hashOfConfig":"331"},{"size":1463,"mtime":1620103932412,"results":"439","hashOfConfig":"331"},{"size":434,"mtime":1604852751383,"results":"440","hashOfConfig":"331"},{"size":3493,"mtime":1606203099647,"results":"441","hashOfConfig":"331"},{"size":646,"mtime":1605742914558,"results":"442","hashOfConfig":"331"},{"size":1233,"mtime":1605747899806,"results":"443","hashOfConfig":"331"},{"size":2330,"mtime":1619669575258,"results":"444","hashOfConfig":"331"},{"size":2859,"mtime":1619669575248,"results":"445","hashOfConfig":"331"},{"size":203,"mtime":1577075433295,"results":"446","hashOfConfig":"331"},{"size":8665,"mtime":1603843657247,"results":"447","hashOfConfig":"331"},{"size":237,"mtime":1606551302294,"results":"448","hashOfConfig":"331"},{"size":1169,"mtime":1606196816207,"results":"449","hashOfConfig":"331"},{"size":2501,"mtime":1619669575187,"results":"450","hashOfConfig":"331"},{"size":795,"mtime":1598939531176,"results":"451","hashOfConfig":"331"},{"size":461,"mtime":1612007712053,"results":"452","hashOfConfig":"331"},{"size":162,"mtime":1588743308012,"results":"453","hashOfConfig":"331"},{"size":190,"mtime":1620796255068,"results":"454","hashOfConfig":"331"},{"size":4965,"mtime":1605876119507,"results":"455","hashOfConfig":"331"},{"size":506,"mtime":1609718591426,"results":"456","hashOfConfig":"331"},{"size":546,"mtime":1598939531118,"results":"457","hashOfConfig":"331"},{"size":1352,"mtime":1598939531171,"results":"458","hashOfConfig":"331"},{"size":2056,"mtime":1603843657249,"results":"459","hashOfConfig":"331"},{"size":2177,"mtime":1619669575181,"results":"460","hashOfConfig":"331"},{"size":2857,"mtime":1606196142000,"results":"461","hashOfConfig":"331"},{"size":1966,"mtime":1606036436198,"results":"462","hashOfConfig":"331"},{"size":1241,"mtime":1609718591432,"results":"463","hashOfConfig":"331"},{"size":584,"mtime":1591263247447,"results":"464","hashOfConfig":"331"},{"size":648,"mtime":1593740263922,"results":"465","hashOfConfig":"331"},{"size":1433,"mtime":1603843657226,"results":"466","hashOfConfig":"331"},{"size":1476,"mtime":1604506760277,"results":"467","hashOfConfig":"331"},{"size":448,"mtime":1605774768755,"results":"468","hashOfConfig":"331"},{"size":1689,"mtime":1610000003900,"results":"469","hashOfConfig":"331"},{"size":4634,"mtime":1620886629868,"results":"470","hashOfConfig":"331"},{"size":147,"mtime":1604851738077,"results":"471","hashOfConfig":"331"},{"size":13418,"mtime":1610943096447,"results":"472","hashOfConfig":"331"},{"size":373,"mtime":1619669575235,"results":"473","hashOfConfig":"331"},{"size":4082,"mtime":1605749221566,"results":"474","hashOfConfig":"331"},{"size":177,"mtime":1588743307949,"results":"475","hashOfConfig":"331"},{"size":3232,"mtime":1620800019991,"results":"476","hashOfConfig":"331"},{"size":4553,"mtime":1606547390811,"results":"477","hashOfConfig":"331"},{"size":3535,"mtime":1605871067137,"results":"478","hashOfConfig":"331"},{"size":2889,"mtime":1619669575221,"results":"479","hashOfConfig":"331"},{"size":655,"mtime":1603843657196,"results":"480","hashOfConfig":"331"},{"size":3934,"mtime":1620886479847,"results":"481","hashOfConfig":"331"},{"size":4915,"mtime":1619669575263,"results":"482","hashOfConfig":"331"},{"size":4221,"mtime":1610000003794,"results":"483","hashOfConfig":"331"},{"size":11500,"mtime":1610605139593,"results":"484","hashOfConfig":"331"},{"size":4515,"mtime":1610000003793,"results":"485","hashOfConfig":"331"},{"size":2312,"mtime":1609718591490,"results":"486","hashOfConfig":"331"},{"size":4508,"mtime":1609719639801,"results":"487","hashOfConfig":"331"},{"size":3065,"mtime":1610000003793,"results":"488","hashOfConfig":"331"},{"size":317,"mtime":1601104501370,"results":"489","hashOfConfig":"331"},{"size":3933,"mtime":1605506058148,"results":"490","hashOfConfig":"331"},{"size":324,"mtime":1579403679282,"results":"491","hashOfConfig":"331"},{"size":1956,"mtime":1605876492922,"results":"492","hashOfConfig":"331"},{"size":3459,"mtime":1610943096449,"results":"493","hashOfConfig":"331"},{"size":2622,"mtime":1610000003503,"results":"494","hashOfConfig":"331"},{"size":3775,"mtime":1606545081003,"results":"495","hashOfConfig":"331"},{"size":1242,"mtime":1598939531144,"results":"496","hashOfConfig":"331"},{"size":909,"mtime":1609740083635,"results":"497","hashOfConfig":"331"},{"size":7351,"mtime":1610000003471,"results":"498","hashOfConfig":"331"},{"size":3723,"mtime":1609718591435,"results":"499","hashOfConfig":"331"},{"size":6649,"mtime":1602325069597,"results":"500","hashOfConfig":"331"},{"size":3914,"mtime":1609480904958,"results":"501","hashOfConfig":"331"},{"size":8647,"mtime":1606548748906,"results":"502","hashOfConfig":"331"},{"size":764,"mtime":1606547525611,"results":"503","hashOfConfig":"331"},{"size":7599,"mtime":1619669575217,"results":"504","hashOfConfig":"331"},{"size":5306,"mtime":1609740083548,"results":"505","hashOfConfig":"331"},{"size":5143,"mtime":1616519133125,"results":"506","hashOfConfig":"331"},{"size":2434,"mtime":1609718591415,"results":"507","hashOfConfig":"331"},{"size":92,"mtime":1602967109921,"results":"508","hashOfConfig":"331"},{"size":664,"mtime":1604082567802,"results":"509","hashOfConfig":"331"},{"size":3620,"mtime":1619669575266,"results":"510","hashOfConfig":"331"},{"size":2208,"mtime":1610000003794,"results":"511","hashOfConfig":"331"},{"size":325,"mtime":1573446790704,"results":"512","hashOfConfig":"331"},{"size":405,"mtime":1619669575238,"results":"513","hashOfConfig":"331"},{"size":4389,"mtime":1610000003794,"results":"514","hashOfConfig":"331"},{"size":469,"mtime":1609930877484,"results":"515","hashOfConfig":"331"},{"size":677,"mtime":1591263247437,"results":"516","hashOfConfig":"331"},{"size":1444,"mtime":1609930877497,"results":"517","hashOfConfig":"331"},{"size":1073,"mtime":1605876488606,"results":"518","hashOfConfig":"331"},{"size":1123,"mtime":1603843657294,"results":"519","hashOfConfig":"331"},{"size":4073,"mtime":1610355518281,"results":"520","hashOfConfig":"331"},{"size":8211,"mtime":1619669575194,"results":"521","hashOfConfig":"331"},{"size":5468,"mtime":1609935138331,"results":"522","hashOfConfig":"331"},{"size":2398,"mtime":1619669575203,"results":"523","hashOfConfig":"331"},{"size":3742,"mtime":1604851765281,"results":"524","hashOfConfig":"331"},{"size":236,"mtime":1598939531242,"results":"525","hashOfConfig":"331"},{"size":11465,"mtime":1619669575192,"results":"526","hashOfConfig":"331"},{"size":10179,"mtime":1620800019990,"results":"527","hashOfConfig":"331"},{"size":4855,"mtime":1619669575235,"results":"528","hashOfConfig":"331"},{"size":972,"mtime":1609211797723,"results":"529","hashOfConfig":"331"},{"size":2491,"mtime":1619669575212,"results":"530","hashOfConfig":"331"},{"size":1635,"mtime":1609718591433,"results":"531","hashOfConfig":"331"},{"size":1995,"mtime":1609740083635,"results":"532","hashOfConfig":"331"},{"size":1212,"mtime":1610943096454,"results":"533","hashOfConfig":"331"},{"size":2108,"mtime":1610943096452,"results":"534","hashOfConfig":"331"},{"size":804,"mtime":1591263247449,"results":"535","hashOfConfig":"331"},{"size":554,"mtime":1604852638913,"results":"536","hashOfConfig":"331"},{"size":518,"mtime":1603843657293,"results":"537","hashOfConfig":"331"},{"size":155,"mtime":1591263247442,"results":"538","hashOfConfig":"331"},{"size":481,"mtime":1591263247445,"results":"539","hashOfConfig":"331"},{"size":3036,"mtime":1619669575202,"results":"540","hashOfConfig":"331"},{"size":2056,"mtime":1609740083635,"results":"541","hashOfConfig":"331"},{"size":2055,"mtime":1609740083635,"results":"542","hashOfConfig":"331"},{"size":2109,"mtime":1609740083635,"results":"543","hashOfConfig":"331"},{"size":1762,"mtime":1609740185248,"results":"544","hashOfConfig":"331"},{"size":5415,"mtime":1619669575195,"results":"545","hashOfConfig":"331"},{"size":3684,"mtime":1604010120388,"results":"546","hashOfConfig":"331"},{"size":5631,"mtime":1609982943667,"results":"547","hashOfConfig":"331"},{"size":4319,"mtime":1619669575206,"results":"548","hashOfConfig":"331"},{"size":3649,"mtime":1619669575199,"results":"549","hashOfConfig":"331"},{"size":2086,"mtime":1619669575200,"results":"550","hashOfConfig":"331"},{"size":10991,"mtime":1619669575198,"results":"551","hashOfConfig":"331"},{"size":2575,"mtime":1609718591422,"results":"552","hashOfConfig":"331"},{"size":576,"mtime":1619669575233,"results":"553","hashOfConfig":"331"},{"size":150,"mtime":1603843657270,"results":"554","hashOfConfig":"331"},{"size":171,"mtime":1603843657272,"results":"555","hashOfConfig":"331"},{"size":144,"mtime":1598939531230,"results":"556","hashOfConfig":"331"},{"size":2774,"mtime":1609719639741,"results":"557","hashOfConfig":"331"},{"size":720,"mtime":1603843657293,"results":"558","hashOfConfig":"331"},{"size":64,"mtime":1603843657287,"results":"559","hashOfConfig":"331"},{"size":769,"mtime":1609995713651,"results":"560","hashOfConfig":"331"},{"size":1529,"mtime":1603843657229,"results":"561","hashOfConfig":"331"},{"size":2198,"mtime":1603843657228,"results":"562","hashOfConfig":"331"},{"size":1083,"mtime":1603843657231,"results":"563","hashOfConfig":"331"},{"size":261,"mtime":1588743308006,"results":"564","hashOfConfig":"331"},{"size":981,"mtime":1609718591419,"results":"565","hashOfConfig":"331"},{"size":1579,"mtime":1609718591423,"results":"566","hashOfConfig":"331"},{"size":1343,"mtime":1610103647810,"results":"567","hashOfConfig":"331"},{"size":753,"mtime":1609740083640,"results":"568","hashOfConfig":"331"},{"size":1354,"mtime":1619669575205,"results":"569","hashOfConfig":"331"},{"size":2354,"mtime":1609740185248,"results":"570","hashOfConfig":"331"},{"size":3970,"mtime":1609740083635,"results":"571","hashOfConfig":"331"},{"size":5966,"mtime":1609718591409,"results":"572","hashOfConfig":"331"},{"size":3101,"mtime":1616519133124,"results":"573","hashOfConfig":"331"},{"size":5250,"mtime":1609982943736,"results":"574","hashOfConfig":"331"},{"size":3398,"mtime":1609982943667,"results":"575","hashOfConfig":"331"},{"size":2511,"mtime":1609718591430,"results":"576","hashOfConfig":"331"},{"size":2532,"mtime":1609718591444,"results":"577","hashOfConfig":"331"},{"size":2619,"mtime":1609718591440,"results":"578","hashOfConfig":"331"},{"size":6722,"mtime":1609995713576,"results":"579","hashOfConfig":"331"},{"size":1429,"mtime":1609731583089,"results":"580","hashOfConfig":"331"},{"size":2707,"mtime":1610000003794,"results":"581","hashOfConfig":"331"},{"size":2634,"mtime":1610000003794,"results":"582","hashOfConfig":"331"},{"size":2670,"mtime":1610000003794,"results":"583","hashOfConfig":"331"},{"size":1408,"mtime":1605774859182,"results":"584","hashOfConfig":"331"},{"size":882,"mtime":1573887384712,"results":"585","hashOfConfig":"331"},{"size":2502,"mtime":1609740217775,"results":"586","hashOfConfig":"331"},{"size":1116,"mtime":1610943096446,"results":"587","hashOfConfig":"331"},{"size":5017,"mtime":1609930877484,"results":"588","hashOfConfig":"331"},{"size":7736,"mtime":1610183005192,"results":"589","hashOfConfig":"331"},{"size":10231,"mtime":1610098517577,"results":"590","hashOfConfig":"331"},{"size":9153,"mtime":1609718591428,"results":"591","hashOfConfig":"331"},{"size":12808,"mtime":1612306614554,"results":"592","hashOfConfig":"331"},{"size":26871,"mtime":1619669575229,"results":"593","hashOfConfig":"331"},{"size":539,"mtime":1591263247359,"results":"594","hashOfConfig":"331"},{"size":647,"mtime":1609930877484,"results":"595","hashOfConfig":"331"},{"size":1264,"mtime":1616519133127,"results":"596","hashOfConfig":"331"},{"size":771,"mtime":1609930877484,"results":"597","hashOfConfig":"331"},{"size":1594,"mtime":1606037410798,"results":"598","hashOfConfig":"331"},{"size":10647,"mtime":1609718591450,"results":"599","hashOfConfig":"331"},{"size":7160,"mtime":1619669575223,"results":"600","hashOfConfig":"331"},{"size":8239,"mtime":1619669575214,"results":"601","hashOfConfig":"331"},{"size":10144,"mtime":1619669575225,"results":"602","hashOfConfig":"331"},{"size":3249,"mtime":1606035810301,"results":"603","hashOfConfig":"331"},{"size":5752,"mtime":1612254752986,"results":"604","hashOfConfig":"331"},{"size":4789,"mtime":1619669575231,"results":"605","hashOfConfig":"331"},{"size":3101,"mtime":1609931402279,"results":"606","hashOfConfig":"331"},{"size":1839,"mtime":1609718591451,"results":"607","hashOfConfig":"331"},{"size":1819,"mtime":1603843657275,"results":"608","hashOfConfig":"331"},{"size":7242,"mtime":1612306614556,"results":"609","hashOfConfig":"331"},{"size":1341,"mtime":1619669575227,"results":"610","hashOfConfig":"331"},{"size":1636,"mtime":1599906541533,"results":"611","hashOfConfig":"331"},{"size":3703,"mtime":1609931402230,"results":"612","hashOfConfig":"331"},{"size":2386,"mtime":1609731583055,"results":"613","hashOfConfig":"331"},{"size":1056,"mtime":1609732283922,"results":"614","hashOfConfig":"331"},{"size":1693,"mtime":1609718591462,"results":"615","hashOfConfig":"331"},{"size":2291,"mtime":1609718591461,"results":"616","hashOfConfig":"331"},{"size":5086,"mtime":1609718591447,"results":"617","hashOfConfig":"331"},{"size":2283,"mtime":1609999182052,"results":"618","hashOfConfig":"331"},{"size":3625,"mtime":1609999120162,"results":"619","hashOfConfig":"331"},{"size":3209,"mtime":1606512089805,"results":"620","hashOfConfig":"331"},{"size":1316,"mtime":1609718591459,"results":"621","hashOfConfig":"331"},{"size":1135,"mtime":1609718591386,"results":"622","hashOfConfig":"331"},{"size":2279,"mtime":1612306614550,"results":"623","hashOfConfig":"331"},{"size":968,"mtime":1620713389931,"results":"624","hashOfConfig":"331"},{"size":520,"mtime":1610103447056,"results":"625","hashOfConfig":"331"},{"size":171,"mtime":1610089010549,"results":"626","hashOfConfig":"331"},{"size":189,"mtime":1610088995991,"results":"627","hashOfConfig":"331"},{"size":84,"mtime":1602325069599,"results":"628","hashOfConfig":"331"},{"size":215,"mtime":1610172685520,"results":"629","hashOfConfig":"331"},{"size":277,"mtime":1610434373192,"results":"630","hashOfConfig":"331"},{"size":198,"mtime":1610089027114,"results":"631","hashOfConfig":"331"},{"size":67,"mtime":1610087192050,"results":"632","hashOfConfig":"331"},{"size":3263,"mtime":1619669575209,"results":"633","hashOfConfig":"331"},{"size":3454,"mtime":1619669575270,"results":"634","hashOfConfig":"331"},{"size":2720,"mtime":1619669575269,"results":"635","hashOfConfig":"331"},{"size":958,"mtime":1619669575210,"results":"636","hashOfConfig":"331"},{"size":1150,"mtime":1619669575252,"results":"637","hashOfConfig":"331"},{"size":1630,"mtime":1619669575208,"results":"638","hashOfConfig":"331"},{"size":2224,"mtime":1619669575208,"results":"639","hashOfConfig":"331"},{"size":966,"mtime":1619669575253,"results":"640","hashOfConfig":"331"},{"size":2283,"mtime":1619669575207,"results":"641","hashOfConfig":"331"},{"size":3738,"mtime":1621720578587,"results":"642","hashOfConfig":"331"},{"size":2098,"mtime":1620886491566,"results":"643","hashOfConfig":"331"},{"size":2307,"mtime":1621108393339,"results":"644","hashOfConfig":"331"},{"size":2791,"mtime":1620888564962,"results":"645","hashOfConfig":"331"},{"size":1338,"mtime":1620102578017,"results":"646","hashOfConfig":"331"},{"size":1431,"mtime":1620710509420,"results":"647","hashOfConfig":"331"},{"size":3069,"mtime":1621720572491,"results":"648","hashOfConfig":"331"},{"size":658,"mtime":1621721506321,"results":"649","hashOfConfig":"331"},{"size":2654,"mtime":1620798227043,"results":"650","hashOfConfig":"331"},{"size":2000,"mtime":1621728872890,"results":"651","hashOfConfig":"331"},{"size":2122,"mtime":1620803013524,"results":"652","hashOfConfig":"331"},{"size":1579,"mtime":1621721213003,"results":"653","hashOfConfig":"331"},{"size":1902,"mtime":1620799985004,"results":"654","hashOfConfig":"331"},{"size":8428,"mtime":1620798652260,"results":"655","hashOfConfig":"331"},{"size":3732,"mtime":1621721212957,"results":"656","hashOfConfig":"331"},{"size":1514,"mtime":1620796896683,"results":"657","hashOfConfig":"331"},{"size":2110,"mtime":1620804132184,"results":"658","hashOfConfig":"331"},{"size":3019,"mtime":1620802890450,"results":"659","hashOfConfig":"331"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b8zg40",{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"677","messages":"678","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"685","messages":"686","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"697","messages":"698","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"701","messages":"702","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"703","messages":"704","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"707","messages":"708","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"709","messages":"710","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"715","messages":"716","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"717","messages":"718","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"721","messages":"722","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"725","messages":"726","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"733","messages":"734","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"739","messages":"740","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"741","messages":"742","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"743","messages":"744","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"747","messages":"748","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"749","messages":"750","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"751","messages":"752","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"753","messages":"754","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"755","messages":"756","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"757","messages":"758","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"761","messages":"762","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"763","messages":"764","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"765","messages":"766","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"769","messages":"770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"773","messages":"774","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"777","messages":"778","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"781","messages":"782","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"783","messages":"784","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"785","messages":"786","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"787","messages":"788","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"789","messages":"790","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"791","messages":"792","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"793","messages":"794","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"795","messages":"796","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"797","messages":"798","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"799","messages":"800","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"801","messages":"802","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"803","messages":"804","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"805","messages":"806","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"807","messages":"808","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"809","messages":"810","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"811","messages":"812","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"813","messages":"814","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"815","messages":"816","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"817","messages":"818","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"819","messages":"820","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"821","messages":"822","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"823","messages":"824","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"825","messages":"826","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"827","messages":"828","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"829","messages":"830","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"831","messages":"832","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"833","messages":"834","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"835","messages":"836","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"837","usedDeprecatedRules":"664"},{"filePath":"838","messages":"839","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"840","messages":"841","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"842","messages":"843","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"844","messages":"845","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"846","messages":"847","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"848","messages":"849","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"850","messages":"851","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"852","messages":"853","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"854","messages":"855","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"856","messages":"857","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"858","messages":"859","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"860","messages":"861","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"862","messages":"863","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"864","messages":"865","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"866","messages":"867","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"868","messages":"869","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"870","messages":"871","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"872","messages":"873","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"874","messages":"875","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"876","messages":"877","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"878","usedDeprecatedRules":"664"},{"filePath":"879","messages":"880","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"881","messages":"882","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"883","messages":"884","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"885","messages":"886","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"887","messages":"888","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"889","messages":"890","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"891","messages":"892","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"893","messages":"894","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"895","messages":"896","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"897","messages":"898","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"899","messages":"900","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"901","messages":"902","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"903","messages":"904","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"905","messages":"906","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"907","messages":"908","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"909","messages":"910","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"911","messages":"912","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"913","messages":"914","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"915","messages":"916","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"917","messages":"918","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"919","messages":"920","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"921","messages":"922","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"923","messages":"924","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"925","messages":"926","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"927","messages":"928","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"929","messages":"930","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"931"},{"filePath":"932","messages":"933","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"934","messages":"935","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"936","messages":"937","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"938","messages":"939","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"940","messages":"941","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"942","messages":"943","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"944","messages":"945","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"946","messages":"947","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"948","messages":"949","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"950","messages":"951","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"952","messages":"953","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"954","messages":"955","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"956","messages":"957","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"958","messages":"959","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"960","messages":"961","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"962","messages":"963","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"964","messages":"965","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"966","messages":"967","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"968","messages":"969","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"970","messages":"971","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"972","messages":"973","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"974","messages":"975","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"976","messages":"977","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"978","usedDeprecatedRules":"664"},{"filePath":"979","messages":"980","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"981","messages":"982","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"983","messages":"984","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"985","messages":"986","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"987","messages":"988","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"989","messages":"990","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"991","messages":"992","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"993","messages":"994","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"995","messages":"996","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"997","messages":"998","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"999","messages":"1000","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1001","usedDeprecatedRules":"664"},{"filePath":"1002","messages":"1003","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1004","messages":"1005","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1006","messages":"1007","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1008","messages":"1009","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1010","messages":"1011","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1012","messages":"1013","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1014","messages":"1015","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1016","usedDeprecatedRules":"664"},{"filePath":"1017","messages":"1018","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1019","usedDeprecatedRules":"664"},{"filePath":"1020","messages":"1021","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1022","messages":"1023","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1024","messages":"1025","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1026","messages":"1027","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1028","messages":"1029","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1030","messages":"1031","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1032","messages":"1033","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1034","messages":"1035","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1036","messages":"1037","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1038","messages":"1039","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1040","messages":"1041","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1042","messages":"1043","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1044","messages":"1045","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1046","messages":"1047","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1048","messages":"1049","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1050","messages":"1051","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1052","messages":"1053","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1054","messages":"1055","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1056","messages":"1057","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1058","messages":"1059","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1060","messages":"1061","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1062","messages":"1063","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1064","messages":"1065","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1066","messages":"1067","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1068","messages":"1069","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1070","messages":"1071","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1072","messages":"1073","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1074","messages":"1075","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1076","messages":"1077","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1078"},{"filePath":"1079","messages":"1080","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1081","messages":"1082","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1083","messages":"1084","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1085","messages":"1086","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1087","messages":"1088","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1089","messages":"1090","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1091","messages":"1092","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1093","messages":"1094","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1095","messages":"1096","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1097","messages":"1098","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1099","messages":"1100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1101","messages":"1102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1103","messages":"1104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1105","messages":"1106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1107","messages":"1108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1109","messages":"1110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1111","messages":"1112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1113","messages":"1114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1115","messages":"1116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1117","messages":"1118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1119","messages":"1120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1121","messages":"1122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1123","usedDeprecatedRules":"664"},{"filePath":"1124","messages":"1125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1126","messages":"1127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1128","messages":"1129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1130","usedDeprecatedRules":"664"},{"filePath":"1131","messages":"1132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1133","messages":"1134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1135","messages":"1136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1137","messages":"1138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1139","messages":"1140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1141","messages":"1142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1143","messages":"1144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1145","messages":"1146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1147","messages":"1148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1149","messages":"1150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1151","messages":"1152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1153","messages":"1154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1155","messages":"1156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1157","messages":"1158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1159","messages":"1160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1161","messages":"1162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1163","messages":"1164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1165","messages":"1166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1167","messages":"1168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1169","usedDeprecatedRules":"664"},{"filePath":"1170","messages":"1171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1172","messages":"1173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1174","messages":"1175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1176","messages":"1177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1178","messages":"1179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1180","messages":"1181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1182","messages":"1183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1184","messages":"1185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1186","messages":"1187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1188","messages":"1189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1190","messages":"1191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1192","messages":"1193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1194","messages":"1195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1196","messages":"1197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1198","usedDeprecatedRules":"664"},{"filePath":"1199","messages":"1200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1201","messages":"1202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1203","messages":"1204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1205","messages":"1206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1207","messages":"1208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1209","messages":"1210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1211","messages":"1212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1213","messages":"1214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1215","messages":"1216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1217","messages":"1218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1219","messages":"1220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1221","messages":"1222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1223","messages":"1224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1225","messages":"1226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1227","messages":"1228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1229","messages":"1230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1231","usedDeprecatedRules":"664"},{"filePath":"1232","messages":"1233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1234","messages":"1235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1236","messages":"1237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1238","messages":"1239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1240","messages":"1241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1242","messages":"1243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1244","messages":"1245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1246","messages":"1247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1248","messages":"1249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1250","messages":"1251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1252","messages":"1253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1254","messages":"1255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1256","messages":"1257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1258","messages":"1259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1260","messages":"1261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1262","messages":"1263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1264","messages":"1265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1266","messages":"1267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1268","messages":"1269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1270","messages":"1271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1272","messages":"1273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1274","messages":"1275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1276","messages":"1277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1278","messages":"1279","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1280","usedDeprecatedRules":"664"},{"filePath":"1281","messages":"1282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1283","messages":"1284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1285","messages":"1286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1287","messages":"1288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1289","messages":"1290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1291","messages":"1292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1293","messages":"1294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1295","messages":"1296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"664"},{"filePath":"1297","messages":"1298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1299","messages":"1300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1301","messages":"1302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1303","messages":"1304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1305","messages":"1306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1307","messages":"1308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1309","messages":"1310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1311","messages":"1312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1313","messages":"1314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1315","messages":"1316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1317","messages":"1318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1319","messages":"1320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1321","messages":"1322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1323","messages":"1324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1325","messages":"1326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1327","messages":"1328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1329","messages":"1330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1331","messages":"1332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\index.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\store.ts",[],["1333","1334"],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\app\\Main.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\key-value\\reducer.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\blocks\\reducer.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\notifications\\reducer.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\rooms\\reducer.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\session\\reducer.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\reducer.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\sprints\\reducer.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\users\\reducer.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\blocks\\actions.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\actions.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\key-value\\actions.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\notifications\\actions.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\key-value\\selectors.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\session\\actions.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\key-value\\types.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\rooms\\actions.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\session\\types.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\session\\selectors.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\users\\actions.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\session\\initializeAppSession.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\utils\\utils.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\seedDemoData.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\appHome\\path.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\socket.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\app\\ExistentialRenderer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\app\\Routes.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\appHome\\AppHomeContainer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\styled\\Container.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\utils.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\sprints\\actions.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\chat\\getUserRoomsAndChats.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\users\\selectors.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\OperationType.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\operation.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\utils\\cast.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\selectors.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\user\\user.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\storage\\userSession.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\notification\\notification.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\block\\utils.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\block\\block.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\session\\logoutUser.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incomingEventTypes.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleUpdateSprintEvent.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleUserUpdateEvent.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleRoomReadCounterEvent.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleUpdateNotificationsEvent.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleStartSprintEvent.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\appHome\\AppHome.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleNewUserCollaborationRequestEvent.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleOrgCollaborationRequestEvent.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleEndSprintEvent.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleNewSprintEvent.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleNewRoomEvent.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleNewMessageEvent.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleDeleteSprintEvent.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleConnectEvent.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleDisconnectEvent.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleBlockUpdateEvent.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\signup\\SignupContainer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\web\\web1\\Web.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\web\\web0\\WebHeader.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\addr.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\login\\LoginContainer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\password\\ForgotPasswordContainer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\password\\ChangePasswordWithTokenContainer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\outgoing\\subscribeEvent.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\chat\\chat.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\chat\\utils.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\user\\schema.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\utils.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\utils\\extract.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\utils\\storage.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\query.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\auth.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\outgoing\\unsubscribeEvent.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\rooms\\selectors.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\sprints\\selectors.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleAuthEvent.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\outgoingEventTypes.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\block\\deleteBlock.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\notification\\loadUserNotifications.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\block\\loadOrgData.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\sprint\\addSprint.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\block\\updateBlock.ts",["1335","1336","1337"],"import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport merge from \"lodash/merge\";\r\nimport {\r\n    BlockType,\r\n    getUpdateBlockInput,\r\n    IBlock,\r\n    IBoardTaskResolution,\r\n    IFormBlock,\r\n} from \"../../../models/block/block\";\r\nimport { seedBlock, seedUpdateBlock } from \"../../../models/seedDemoData\";\r\nimport BlockAPI from \"../../../net/block/block\";\r\nimport { getDateString, getNewId, mergeData } from \"../../../utils/utils\";\r\nimport BlockActions, { IUpdateBlockActionArgs } from \"../../blocks/actions\";\r\nimport BlockSelectors from \"../../blocks/selectors\";\r\nimport SessionSelectors from \"../../session/selectors\";\r\nimport { IAppAsyncThunkConfig, IStoreLikeObject } from \"../../types\";\r\nimport {\r\n    dispatchOperationCompleted,\r\n    dispatchOperationError,\r\n    dispatchOperationStarted,\r\n    IOperation,\r\n    isOperationStarted,\r\n    wrapUpOpAction,\r\n} from \"../operation\";\r\nimport OperationType from \"../OperationType\";\r\nimport OperationSelectors from \"../selectors\";\r\nimport { GetOperationActionArgs } from \"../types\";\r\nimport { hasBlockParentChanged, storeTransferBlock } from \"./transferBlock\";\r\n\r\nexport interface IUpdateBlockOperationActionArgs {\r\n    blockId: string;\r\n    data: Partial<IFormBlock>;\r\n}\r\n\r\nexport const updateBlockOpAction = createAsyncThunk<\r\n    IOperation<IBlock> | undefined,\r\n    GetOperationActionArgs<IUpdateBlockOperationActionArgs>,\r\n    IAppAsyncThunkConfig\r\n>(\"op/block/updateBlock\", async (arg, thunkAPI) => {\r\n    const opId = arg.opId || getNewId();\r\n\r\n    const operation = OperationSelectors.getOperationWithId(\r\n        thunkAPI.getState(),\r\n        opId\r\n    );\r\n\r\n    if (isOperationStarted(operation)) {\r\n        return;\r\n    }\r\n\r\n    thunkAPI.dispatch(\r\n        dispatchOperationStarted(opId, OperationType.UpdateBlock)\r\n    );\r\n\r\n    try {\r\n        const block = BlockSelectors.getBlock(thunkAPI.getState(), arg.blockId);\r\n        assignUserToTaskOnUpdateStatus(thunkAPI, block, arg.data);\r\n\r\n        const user = SessionSelectors.assertGetUser(thunkAPI.getState());\r\n        const isDemoMode = SessionSelectors.isDemoMode(thunkAPI.getState());\r\n        let updatedBlock: IBlock | null = null;\r\n\r\n        if (!isDemoMode) {\r\n            const updateBlockInput = getUpdateBlockInput(block, arg.data);\r\n            const result = await BlockAPI.updateBlock({\r\n                blockId: arg.blockId,\r\n                data: updateBlockInput,\r\n            });\r\n\r\n            if (result && result.errors) {\r\n                throw result.errors;\r\n            }\r\n\r\n            updatedBlock = result.block;\r\n        } else {\r\n            updatedBlock = {\r\n                ...block,\r\n                ...seedUpdateBlock(user, { type: block.type, ...arg.data }),\r\n            };\r\n        }\r\n\r\n        storeUpdateBlock(thunkAPI, block, updatedBlock);\r\n        thunkAPI.dispatch(\r\n            dispatchOperationCompleted(\r\n                opId,\r\n                OperationType.UpdateBlock,\r\n                null,\r\n                updatedBlock\r\n            )\r\n        );\r\n    } catch (error) {\r\n        thunkAPI.dispatch(\r\n            dispatchOperationError(opId, OperationType.UpdateBlock, error)\r\n        );\r\n    }\r\n\r\n    return wrapUpOpAction(thunkAPI, opId, arg);\r\n});\r\n\r\nexport const storeUpdateBlock = (\r\n    store: IStoreLikeObject,\r\n    block: IBlock,\r\n    data: Partial<IBlock>\r\n) => {\r\n    const forTransferBlockOnly = { ...block, ...data };\r\n\r\n    if (hasBlockParentChanged(block, forTransferBlockOnly)) {\r\n        storeTransferBlock(store, {\r\n            draggedBlockId: forTransferBlockOnly.customId,\r\n            destinationBlockId: data.parent!,\r\n        });\r\n    }\r\n\r\n    if (data.boardStatuses) {\r\n        data.boardStatuses.sort((s0, s1) => {\r\n            return s0.position - s1.position;\r\n        });\r\n    }\r\n\r\n    store.dispatch(\r\n        BlockActions.updateBlock({\r\n            data,\r\n            id: block.customId,\r\n            meta: {\r\n                arrayUpdateStrategy: \"replace\",\r\n            },\r\n        })\r\n    );\r\n\r\n    updateTasksIfHasDeletedStatusesOrLabels(store, block, data);\r\n};\r\n\r\nfunction assignUserToTaskOnUpdateStatus(\r\n    store: IStoreLikeObject,\r\n    block: IBlock,\r\n    data: Partial<IFormBlock>\r\n) {\r\n    if (block.type !== BlockType.Task) {\r\n        return;\r\n    }\r\n\r\n    if (data.status && data.status !== block.status) {\r\n        const assignees = data.assignees || block.assignees || [];\r\n\r\n        if (assignees.length === 0) {\r\n            const user = SessionSelectors.assertGetUser(store.getState());\r\n\r\n            data.assignees = [\r\n                {\r\n                    userId: user.customId,\r\n                },\r\n            ];\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * We're using IBoardTaskResolution and not IBoardStatus,\r\n * cause it's the closest type to IBoardLabel and IBoardStatus\r\n * and it affords us to use the same function for all three types\r\n */\r\n\r\nfunction indexStatuses(statuses: IBoardTaskResolution[]) {\r\n    return statuses.reduce((accumulator, status) => {\r\n        accumulator[status.customId] = status;\r\n        return accumulator;\r\n    }, {});\r\n}\r\n\r\ninterface IDeletedStatuses {\r\n    [key: string]: { newId: string };\r\n}\r\n\r\nfunction getDeletedStatuses(\r\n    existingStatuses: IBoardTaskResolution[] = [],\r\n    statuses: IBoardTaskResolution[] = []\r\n) {\r\n    if (\r\n        !statuses ||\r\n        !existingStatuses ||\r\n        (statuses.length === 0 && existingStatuses.length === 0)\r\n    ) {\r\n        return {};\r\n    }\r\n\r\n    const deletedStatuses: IDeletedStatuses = {};\r\n    const cachedStatuses = indexStatuses(statuses);\r\n\r\n    existingStatuses.forEach((status, i) => {\r\n        if (!cachedStatuses[status.customId]) {\r\n            const newIdIndex = i >= statuses.length ? i - 1 : i;\r\n            const id = statuses[newIdIndex]?.customId;\r\n            deletedStatuses[status.customId] = { newId: id };\r\n        }\r\n    });\r\n\r\n    return deletedStatuses;\r\n}\r\n\r\nconst updateTasksIfHasDeletedStatusesOrLabels = (\r\n    store: IStoreLikeObject,\r\n    block: IBlock,\r\n    data: Partial<IBlock>\r\n) => {\r\n    const deletedStatuses = getDeletedStatuses(\r\n        block.boardStatuses,\r\n        data.boardStatuses\r\n    );\r\n\r\n    const deletedLabels = getDeletedStatuses(\r\n        block.boardLabels,\r\n        data.boardLabels\r\n    );\r\n\r\n    const deletedResolutions = getDeletedStatuses(\r\n        block.boardResolutions,\r\n        data.boardResolutions\r\n    );\r\n\r\n    const hasDeletedStatus = Object.keys(deletedStatuses).length > 0;\r\n    const hasDeletedLabel = Object.keys(deletedLabels).length > 0;\r\n    const hasDeletedResolutions = Object.keys(deletedResolutions).length > 0;\r\n\r\n    if (!hasDeletedStatus && !hasDeletedLabel && !hasDeletedResolutions) {\r\n        return;\r\n    }\r\n\r\n    const tasks = BlockSelectors.getBlockChildren(\r\n        store.getState(),\r\n        block.customId,\r\n        BlockType.Task\r\n    );\r\n\r\n    if (tasks.length === 0) {\r\n        return;\r\n    }\r\n\r\n    const updates: IUpdateBlockActionArgs[] = [];\r\n    const user = SessionSelectors.assertGetUser(store.getState());\r\n\r\n    tasks.forEach((task) => {\r\n        const taskUpdates: Partial<IBlock> = {};\r\n        let updated = false;\r\n\r\n        if (hasDeletedStatus && task.status && deletedStatuses[task.status]) {\r\n            taskUpdates.status = deletedStatuses[task.status].newId;\r\n            taskUpdates.statusAssignedAt = getDateString();\r\n            taskUpdates.statusAssignedBy = user.customId;\r\n            updated = true;\r\n        }\r\n\r\n        if (hasDeletedLabel) {\r\n            const taskAssignedLabels = task.labels?.filter((label) => {\r\n                if (deletedLabels[label.customId]) {\r\n                    return false;\r\n                }\r\n\r\n                return true;\r\n            });\r\n\r\n            if (taskAssignedLabels?.length !== task.labels?.length) {\r\n                taskUpdates.labels = taskAssignedLabels;\r\n                updated = true;\r\n            }\r\n        }\r\n\r\n        if (\r\n            hasDeletedResolutions &&\r\n            task.taskResolution &&\r\n            !!deletedResolutions[task.taskResolution]\r\n        ) {\r\n            taskUpdates.taskResolution = null;\r\n            updated = true;\r\n        }\r\n\r\n        if (updated) {\r\n            updates.push({\r\n                id: task.customId,\r\n                data: taskUpdates,\r\n                meta: { arrayUpdateStrategy: \"replace\" },\r\n            });\r\n        }\r\n    });\r\n\r\n    if (updates.length === 0) {\r\n        return;\r\n    }\r\n\r\n    store.dispatch(BlockActions.bulkUpdateBlocks(updates));\r\n};\r\n","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\appHome\\UserOptionsMenu.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\hooks\\useOperation.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\appHome\\HeaderMobile.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\RenderForDevice.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\appHome\\AppHomeDesktop.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\session\\changePassword.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\signup\\Signup.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\session\\requestForgotPassword.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\session\\loginUser.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\org\\OrgsListContainer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\org\\EditOrgFormInDrawer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\feedback\\FeedbackFormModal.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\OrgBoardContainer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\notification\\Notification.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\password\\ChangePassword.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\password\\ForgotPassword.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\login\\Login.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\fragments.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\rooms\\utils.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\block\\schema.ts",["1338"],"import {\r\n    blockFragment,\r\n    commentFragment,\r\n    errorFragment,\r\n    notificationFragment,\r\n} from \"../fragments\";\r\n\r\nconst addBlockMutation = `\r\n    ${errorFragment}\r\n    ${blockFragment}\r\n    mutation AddBlockMutation ($block: AddBlockInput!) {\r\n        block {\r\n            addBlock (block: $block) {\r\n                errors {\r\n                    ...errorFragment\r\n                }\r\n                block {\r\n                    ...blockFragment\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst updateBlockMutation = `\r\n    ${errorFragment}\r\n    ${blockFragment}\r\n    mutation UpdateBlockMutation ($blockId: String!, $data: UpdateBlockInput!) {\r\n        block {\r\n            updateBlock (blockId: $blockId, data: $data) {\r\n                errors {\r\n                    ...errorFragment\r\n                }\r\n                block {\r\n                    ...blockFragment\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst deleteBlockMutation = `\r\n    ${errorFragment}\r\n    mutation DeleteBlockMutation ($blockId: String!) {\r\n        block {\r\n            deleteBlock (blockId: $blockId) {\r\n                errors {\r\n                    ...errorFragment\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst getRootBlocksQuery = `\r\n    ${blockFragment}\r\n    ${errorFragment}\r\n    query GetUserRootBlocksQuery {\r\n        block {\r\n            getUserRootBlocks {\r\n                errors {\r\n                    ...errorFragment\r\n                }\r\n                blocks {\r\n                    ...blockFragment\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst getBlockChildrenQuery = `\r\n    ${blockFragment}\r\n    ${errorFragment}\r\n    query GetBlockChildrenQuery ($blockId: String!, $typeList: [String!]) {\r\n        block {\r\n            getBlockChildren (blockId: $blockId, typeList: $typeList) {\r\n                errors {\r\n                    ...errorFragment\r\n                }\r\n                blocks {\r\n                    ...blockFragment\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst addCollaboratorsMutation = `\r\n    ${errorFragment}\r\n    ${notificationFragment}\r\n    mutation AddCollaborators (\r\n        $blockId: String!,\r\n        $collaborators: [AddCollaboratorInput!]!\r\n    ) {\r\n        block {\r\n            addCollaborators (blockId: $blockId, collaborators: $collaborators) {\r\n                errors {\r\n                    ...errorFragment\r\n                }\r\n                requests {\r\n                    ...notificationFragment\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst removeCollaboratorMutation = `\r\n    ${errorFragment}\r\n    mutation RemoveCollaboratorsMutation ($blockId: String!, $collaboratorId: String!) {\r\n        block {\r\n            removeCollaborator (blockId: $blockId, collaboratorId: $collaboratorId) {\r\n                errors {\r\n                    ...errorFragment\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst revokeRequestMutation = `\r\n    ${errorFragment}\r\n    mutation RevokeCollaborationRequestMutation ($blockId: String!, $requestId: String!) {\r\n        block {\r\n            revokeCollaborationRequest (blockId: $blockId, requestId: $requestId) {\r\n                errors {\r\n                    ...errorFragment\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport {\r\n    addBlockMutation,\r\n    updateBlockMutation,\r\n    deleteBlockMutation,\r\n    getBlockChildrenQuery,\r\n    blockFragment,\r\n    addCollaboratorsMutation,\r\n    getRootBlocksQuery,\r\n    removeCollaboratorMutation,\r\n    revokeRequestMutation,\r\n};\r\n","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\serverRecommendedActions.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\utils\\log.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\incoming\\handleFetchMissingBroadcastsEvent.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\socket\\outgoing\\fetchMissingBroadcastsEvent.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\block\\transferBlock.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\blocks\\selectors.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\block\\block.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\theme.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\hooks\\useFormHelpers.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\forms\\formik-utils.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\appHome\\HeaderMobileMenu.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\appHome\\AppHomeDesktopMenu.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\forms\\FormStyledComponents.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\forms\\FormError.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\user\\constants.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\user\\validation.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\notification\\respondToNotification.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\collaborator\\utils.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\EmptyMessage.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\collaborator\\CollaborationRequestStatus.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\hooks\\useObject.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\ItemAvatar.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\utilities\\SpaceOut.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\forms\\FormMessage.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\notification\\utils.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\user\\userErrorMessages.js",[],["1339","1340"],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\notifications\\selectors.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\utils.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\useLoadOrgData.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\hooks\\useBlockParents.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\block\\loadRootBlocks.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\utils.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\BoardFormInDrawer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\OrgBoard.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\utilities\\LoadingEllipsis.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\sprint\\sprint.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\collaborator\\AddCollaboratorFormInDrawer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\feedback\\FeedbackFormContainer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\withDrawer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\org\\EditOrgFormContainer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\org\\OrgsMain.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\block\\confirmBlockDelete.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\session\\signupUser.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\block\\addBlock.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\sprint\\deleteSprint.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\chat\\sendMessage.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\sprint\\endSprint.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\web\\web1\\Bottom.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\web\\web1\\Face.tsx",["1341","1342"],"import styled from \"@emotion/styled\";\r\nimport { Space, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport { ArrowRightCircle } from \"react-feather\";\r\nimport { Link } from \"react-router-dom\";\r\nimport RenderForDevice from \"../../components/RenderForDevice\";\r\nimport webConstants from \"./constants\";\r\n\r\nconst desktopStyles: Record<string, React.CSSProperties> = {\r\n    p1: { textAlign: \"center\", fontSize: \"32px\", margin: \"32px 0\" },\r\n    p2: { textAlign: \"center\", marginBottom: \"24px\", fontSize: \"16px\" },\r\n    face: {\r\n        justifyContent: \"center\",\r\n        maxWidth: \"520px\",\r\n        margin: \"auto\",\r\n        alignItems: \"center\",\r\n    },\r\n};\r\n\r\nconst mobileStyles: Record<string, React.CSSProperties> = {\r\n    p1: { fontSize: \"24px\", margin: \"24px 0\" },\r\n    p2: { marginBottom: \"24px\", fontSize: \"16px\" },\r\n    face: {},\r\n};\r\n\r\nconst Face: React.FC<{}> = () => {\r\n    const render = (mobile = false) => {\r\n        const styles = mobile ? mobileStyles : desktopStyles;\r\n\r\n        return (\r\n            <StyledFace style={styles.face}>\r\n                <h1\r\n                    style={{\r\n                        fontSize: \"16px\",\r\n                        textTransform: \"uppercase\",\r\n                        margin: 0,\r\n                        letterSpacing: \"1px\",\r\n                        fontWeight: \"bold\",\r\n                    }}\r\n                >\r\n                    Softkave\r\n                </h1>\r\n                <Typography.Paragraph\r\n                    style={{\r\n                        letterSpacing: \"0.5px\",\r\n                        ...styles.p1,\r\n                    }}\r\n                >\r\n                    Chat and tasks platform built for startups\r\n                </Typography.Paragraph>\r\n                <Typography.Text style={styles.p2}>\r\n                    The best part is, Softkave is free for your first year!\r\n                    Then, it's a $2 per user per month.\r\n                </Typography.Text>\r\n                <StyledButtonsContainer>\r\n                    <StyledTagLikeButton\r\n                        to=\"/signup\"\r\n                        style={{ backgroundColor: \"#36B37E\" }}\r\n                    >\r\n                        Signup\r\n                    </StyledTagLikeButton>\r\n                    <StyledTagLikeButton\r\n                        to=\"/login\"\r\n                        style={{ backgroundColor: \"#6554C0\" }}\r\n                    >\r\n                        Login\r\n                    </StyledTagLikeButton>\r\n                    <StyledTagLikeButton\r\n                        to=\"/forgot-password\"\r\n                        style={{ backgroundColor: \"#00B8D9\" }}\r\n                    >\r\n                        Forgot Password\r\n                    </StyledTagLikeButton>\r\n                    {/* <StyledTagLikeButtonWithNativeLink\r\n                        href=\"#pricing\"\r\n                        style={{ backgroundColor: \"#36B37E\" }}\r\n                    >\r\n                        Pricing\r\n                    </StyledTagLikeButtonWithNativeLink> */}\r\n                    <StyledTagLikeButton\r\n                        to={webConstants.demoURL}\r\n                        style={{ backgroundColor: \"#FF5630\" }}\r\n                    >\r\n                        <Space>\r\n                            Try Demo\r\n                            <ArrowRightCircle\r\n                                style={{\r\n                                    width: \"14px\",\r\n                                    height: \"14px\",\r\n                                    verticalAlign: \"middle\",\r\n                                }}\r\n                            />\r\n                        </Space>\r\n                    </StyledTagLikeButton>\r\n                </StyledButtonsContainer>\r\n            </StyledFace>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <RenderForDevice\r\n            renderForDesktop={() => render(false)}\r\n            renderForMobile={() => render(true)}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Face;\r\n\r\nconst StyledButtonsContainer = styled.div({\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n});\r\n\r\nconst StyledTagLikeButton = styled(Link)({\r\n    marginRight: \"6px\",\r\n    color: \"white\",\r\n    borderRadius: \"4px\",\r\n    padding: \"2px 8px\",\r\n    marginBottom: \"4px\",\r\n\r\n    \"&:last-of-type\": {\r\n        marginRight: 0,\r\n    },\r\n\r\n    \"&:hover\": {\r\n        color: \"white\",\r\n    },\r\n});\r\n\r\nconst StyledFace = styled.div({\r\n    height: \"100%\",\r\n    padding: \"16px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n});\r\n","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\sprint\\startSprint.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\hooks\\useBlockChildrenTypes.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\sprint\\schema.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\utils\\window.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\system\\sendFeedback.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\OrgBoardHeader.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\LoadBlockChildren.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\BoardFormContainer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\BoardTypeList.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\BlockContainer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\BoardContainer.tsx",["1343"],"import { unwrapResult } from \"@reduxjs/toolkit\";\r\nimport { message, Modal } from \"antd\";\r\nimport path from \"path\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useRouteMatch } from \"react-router\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { BlockType, IBlock } from \"../../models/block/block\";\r\nimport { ISprint } from \"../../models/sprint/types\";\r\nimport { getSprintRemainingWorkingDays } from \"../../models/sprint/utils\";\r\nimport subscribeEvent from \"../../net/socket/outgoing/subscribeEvent\";\r\nimport unsubcribeEvent from \"../../net/socket/outgoing/unsubscribeEvent\";\r\nimport { loadBlockChildrenOpAction } from \"../../redux/operations/block/loadBlockChildren\";\r\nimport OperationType from \"../../redux/operations/OperationType\";\r\nimport { endSprintOpAction } from \"../../redux/operations/sprint/endSprint\";\r\nimport { getSprintsOpAction } from \"../../redux/operations/sprint/getSprints\";\r\nimport SprintSelectors from \"../../redux/sprints/selectors\";\r\nimport { AppDispatch, IAppState } from \"../../redux/types\";\r\nimport MessageList from \"../MessageList\";\r\nimport useOperation, {\r\n    getOpData,\r\n    IOperationDerivedData,\r\n    mergeOps,\r\n} from \"../hooks/useOperation\";\r\nimport LoadingEllipsis from \"../utilities/LoadingEllipsis\";\r\nimport Board from \"./Board\";\r\nimport { IBoardResourceTypePathMatch, OnClickDeleteBlock } from \"./types\";\r\n\r\nexport interface IBoardContainerProps {\r\n    blockPath: string;\r\n    board: IBlock;\r\n    isMobile: boolean;\r\n    isAppMenuFolded: boolean;\r\n    onToggleFoldAppMenu: () => void;\r\n    onClickDeleteBlock: OnClickDeleteBlock;\r\n}\r\n\r\nconst BoardContainer: React.FC<IBoardContainerProps> = (props) => {\r\n    const {\r\n        blockPath,\r\n        board,\r\n        isMobile,\r\n        isAppMenuFolded,\r\n        onClickDeleteBlock,\r\n        onToggleFoldAppMenu,\r\n    } = props;\r\n\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const currentSprint = useSelector<IAppState, ISprint | undefined>(\r\n        (state) => {\r\n            if (board.currentSprintId) {\r\n                return SprintSelectors.getSprint(state, board.currentSprintId);\r\n            }\r\n\r\n            return undefined;\r\n        }\r\n    );\r\n\r\n    const resourceTypeMatch = useRouteMatch<IBoardResourceTypePathMatch>(\r\n        `${blockPath}/:resourceType`\r\n    );\r\n\r\n    const resourceType =\r\n        resourceTypeMatch && resourceTypeMatch.params.resourceType;\r\n\r\n    const loadTasks = React.useCallback(\r\n        (loadProps: IOperationDerivedData) => {\r\n            const shouldLoad = !loadProps.operation;\r\n\r\n            if (shouldLoad) {\r\n                dispatch(\r\n                    loadBlockChildrenOpAction({\r\n                        blockId: board.customId,\r\n                        typeList: [BlockType.Task],\r\n                        opId: loadProps.opId,\r\n                    })\r\n                );\r\n            }\r\n        },\r\n        [dispatch, board]\r\n    );\r\n\r\n    const loadSprints = React.useCallback(\r\n        (loadProps: IOperationDerivedData) => {\r\n            const shouldLoad = !loadProps.operation;\r\n\r\n            if (shouldLoad) {\r\n                dispatch(\r\n                    getSprintsOpAction({\r\n                        boardId: board.customId,\r\n                        opId: loadProps.opId,\r\n                    })\r\n                );\r\n            }\r\n        },\r\n        [dispatch, board.customId]\r\n    );\r\n\r\n    const sprintsOp = useOperation(\r\n        {\r\n            resourceId: board.customId,\r\n            type: OperationType.GET_SPRINTS,\r\n        },\r\n        loadSprints,\r\n        { deleteManagedOperationOnUnmount: false }\r\n    );\r\n\r\n    const tasksOp = useOperation(\r\n        {\r\n            resourceId: board.customId,\r\n            type: OperationType.LOAD_BLOCK_CHILDREN,\r\n        },\r\n        loadTasks,\r\n        { deleteManagedOperationOnUnmount: false }\r\n    );\r\n\r\n    // const fetchMissingOp = useFetchMissingBlockUpdates({\r\n    //     block: board,\r\n    //     isBlockDataLoaded: !!tasksOp && !!sprintsOp,\r\n    // });\r\n\r\n    // TODO: this code is duplicated in SprintsContainer\r\n    const closeSprint = async (sprintId: string) => {\r\n        const result = await dispatch(\r\n            endSprintOpAction({\r\n                sprintId,\r\n                deleteOpOnComplete: true,\r\n            })\r\n        );\r\n\r\n        const op: any = unwrapResult(result);\r\n\r\n        if (!op) {\r\n            return;\r\n        }\r\n\r\n        const opStat = getOpData(op);\r\n\r\n        if (opStat.isCompleted) {\r\n            // TODO: duplicated in Board\r\n            const SPRINTS_PATH = path.normalize(`${blockPath}/sprints`);\r\n            history.push(SPRINTS_PATH);\r\n            message.success(ENDED_SPRINT_SUCCESSFULLY);\r\n        } else if (opStat.isError) {\r\n            message.error(ERROR_CLOSING_SPRINT);\r\n        }\r\n    };\r\n\r\n    const promptCloseSprint = () => {\r\n        if (!currentSprint) {\r\n            return;\r\n        }\r\n\r\n        const remainingWorkingDays = getSprintRemainingWorkingDays(\r\n            currentSprint\r\n        );\r\n\r\n        let promptMessage = END_SPRINT_PROMPT_MESSAGE;\r\n\r\n        if (remainingWorkingDays > 0) {\r\n            promptMessage = getEndSprintRemainingWorkingDaysPromptMessage(\r\n                remainingWorkingDays\r\n            );\r\n        }\r\n\r\n        Modal.confirm({\r\n            title: promptMessage,\r\n            okText: YES,\r\n            cancelText: NO,\r\n            okType: \"primary\",\r\n            okButtonProps: { danger: true },\r\n            onOk: async () => closeSprint(currentSprint.customId),\r\n            onCancel() {\r\n                // do nothing\r\n            },\r\n        });\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        subscribeEvent([{ type: board.type as any, customId: board.customId }]);\r\n\r\n        return () => {\r\n            unsubcribeEvent([\r\n                { type: board.type as any, customId: board.customId },\r\n            ]);\r\n        };\r\n    }, [board.customId, board.type]);\r\n\r\n    const ops = mergeOps([tasksOp, sprintsOp]);\r\n    // const ops = mergeOps([tasksOp, sprintsOp, fetchMissingOp]);\r\n\r\n    if (ops.loading) {\r\n        return <LoadingEllipsis />;\r\n    } else if (ops.errors) {\r\n        return <MessageList fill messages={ops.errors} />;\r\n    }\r\n\r\n    // TODO: should we show error if block type is task ( it should never be task )?\r\n    if (!resourceType) {\r\n        const nextPath = path.normalize(blockPath + `/tasks`);\r\n        return <Redirect to={nextPath} />;\r\n    }\r\n\r\n    return (\r\n        <Board\r\n            board={board}\r\n            blockPath={blockPath}\r\n            isAppMenuFolded={isAppMenuFolded}\r\n            isMobile={isMobile}\r\n            onClickDeleteBlock={onClickDeleteBlock}\r\n            onToggleFoldAppMenu={onToggleFoldAppMenu}\r\n            onCloseSprint={promptCloseSprint}\r\n        />\r\n    );\r\n};\r\n\r\nexport default BoardContainer;\r\n\r\nconst END_SPRINT_PROMPT_MESSAGE = \"Are you sure you want to end this sprint?\";\r\nconst ENDED_SPRINT_SUCCESSFULLY = \"Sprint ended successfully\";\r\nconst ERROR_CLOSING_SPRINT = \"Error ending sprint\";\r\nconst YES = \"Yes\";\r\nconst NO = \"No\";\r\n\r\nconst getEndSprintRemainingWorkingDaysPromptMessage = (\r\n    remainingDays: number\r\n) => {\r\n    return `${END_SPRINT_PROMPT_MESSAGE} It has ${remainingDays} working day${\r\n        remainingDays === 1 ? \"\" : \"s\"\r\n    } remaining.`;\r\n};\r\n","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\org\\OrgsListHeader.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\utilities\\Scrollbar.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\collaborator\\AddCollaboratorFormContainer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\feedback\\FeedbackForm.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\feedback\\FeedbackSentMessage.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\org\\EditOrgForm.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\org\\OrgsList.tsx",["1344"],"import { css } from \"@emotion/css\";\r\nimport { Divider, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport { IBlock } from \"../../models/block/block\";\r\nimport {\r\n    CollaborationRequestStatusType,\r\n    INotification,\r\n} from \"../../models/notification/notification\";\r\nimport { IUnseenChatsCountByOrg } from \"../../redux/key-value/types\";\r\nimport BlockThumbnail from \"../block/BlockThumnail\";\r\nimport { getRequestStatus } from \"../collaborator/utils\";\r\nimport EmptyMessage from \"../EmptyMessage\";\r\nimport StyledContainer from \"../styled/Container\";\r\nimport OrgCollaborationRequestThumbnail from \"./OrgCollaborationRequestThumbnail\";\r\n\r\nexport interface IOrgsListProps {\r\n    orgs: IBlock[];\r\n    requests: INotification[];\r\n    unseenChatsCountMapByOrg: IUnseenChatsCountByOrg;\r\n    selectedId?: string;\r\n    onClickBlock: (block: IBlock) => void;\r\n    onClickRequest: (request: INotification) => void;\r\n}\r\n\r\nconst kMakeTextBlueClassName = \"sk-orgslist-make-text-blue\";\r\n\r\nconst OrgsList: React.FC<IOrgsListProps> = (props) => {\r\n    const {\r\n        orgs,\r\n        requests,\r\n        selectedId,\r\n        unseenChatsCountMapByOrg,\r\n        onClickBlock,\r\n        onClickRequest,\r\n    } = props;\r\n\r\n    const requestStatusWeight: Record<\r\n        CollaborationRequestStatusType,\r\n        number\r\n    > = {\r\n        [CollaborationRequestStatusType.Pending]: 0,\r\n        [CollaborationRequestStatusType.Accepted]: 1,\r\n        [CollaborationRequestStatusType.Declined]: 2,\r\n        [CollaborationRequestStatusType.Revoked]: 3,\r\n        [CollaborationRequestStatusType.Expired]: 4,\r\n    };\r\n\r\n    const reqs = requests\r\n        .sort((r1, r2) => {\r\n            const s1 = getRequestStatus(r1);\r\n            const s2 = getRequestStatus(r2);\r\n            return requestStatusWeight[s1] - requestStatusWeight[s2];\r\n        })\r\n        .filter((r1) => {\r\n            const s1 = getRequestStatus(r1);\r\n            return s1 === CollaborationRequestStatusType.Pending;\r\n        });\r\n\r\n    if (orgs.length === 0 && requests.length === 0) {\r\n        return (\r\n            <EmptyMessage>Create an organization to get started</EmptyMessage>\r\n        );\r\n    }\r\n\r\n    const wrap = (key: string, node: React.ReactNode, onClick: any) => {\r\n        const selected = selectedId === key;\r\n        let color: string | undefined;\r\n        let backgroundColor: string | undefined;\r\n\r\n        if (selected) {\r\n            color = \"#1890ff\";\r\n            backgroundColor = \"#e6f7ff\";\r\n        }\r\n\r\n        return (\r\n            <StyledContainer\r\n                key={key}\r\n                s={{\r\n                    color,\r\n                    backgroundColor,\r\n                    padding: \"8px 16px\",\r\n                    cursor: \"pointer\",\r\n\r\n                    \"&:hover\": {\r\n                        backgroundColor,\r\n                    },\r\n\r\n                    \"& .ant-tag\": {\r\n                        cursor: \"pointer\",\r\n                    },\r\n\r\n                    [`& .${kMakeTextBlueClassName} .ant-typography`]: {\r\n                        color,\r\n                    },\r\n                }}\r\n                onClick={onClick}\r\n            >\r\n                {node}\r\n            </StyledContainer>\r\n        );\r\n    };\r\n\r\n    let isPrevGroupRendered = false;\r\n    const hasOrgs = orgs.length > 0;\r\n    const hasRequests = reqs.length > 0;\r\n\r\n    const renderOrgs = () => {\r\n        if (!hasOrgs) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {orgs.map((org) =>\r\n                    wrap(\r\n                        org.customId,\r\n                        <BlockThumbnail\r\n                            block={org}\r\n                            className={kMakeTextBlueClassName}\r\n                            showFields={[\"name\"]}\r\n                            unseenChatsCount={\r\n                                unseenChatsCountMapByOrg[org.customId]\r\n                            }\r\n                        />,\r\n                        () => onClickBlock(org)\r\n                    )\r\n                )}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const renderRequests = () => {\r\n        if (!hasRequests) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {(isPrevGroupRendered =\r\n                    isPrevGroupRendered || reqs.length > 0) && <Divider />}\r\n                <Typography.Text\r\n                    type=\"secondary\"\r\n                    style={{ padding: \"0 16px\", textTransform: \"uppercase\" }}\r\n                >\r\n                    Requests\r\n                </Typography.Text>\r\n                {reqs.map((request) =>\r\n                    wrap(\r\n                        request.customId,\r\n                        <OrgCollaborationRequestThumbnail\r\n                            collabRequest={request}\r\n                        />,\r\n                        () => onClickRequest(request)\r\n                    )\r\n                )}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={css({\r\n                display: \"flex\",\r\n                flex: 1,\r\n                height: \"100%\",\r\n                width: \"100%\",\r\n                flexDirection: \"column\",\r\n            })}\r\n        >\r\n            {renderOrgs()}\r\n            {renderRequests()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(OrgsList);\r\n","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\chat\\ChatRoomsContainer.tsx",["1345"],"import moment from \"moment\";\r\nimport path from \"path\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useRouteMatch } from \"react-router\";\r\nimport { IBlock } from \"../../models/block/block\";\r\nimport { IRoom } from \"../../models/chat/types\";\r\nimport { IUser } from \"../../models/user/user\";\r\nimport {\r\n    ISendMessageAPIParameters,\r\n    IUpdateRoomReadCounterAPIParameters,\r\n} from \"../../net/chat/chat\";\r\nimport BlockSelectors from \"../../redux/blocks/selectors\";\r\nimport { sendMessageOpAction } from \"../../redux/operations/chat/sendMessage\";\r\nimport { updateRoomReadCounterOpAction } from \"../../redux/operations/chat/updateRoomReadCounter\";\r\nimport RoomSelectors from \"../../redux/rooms/selectors\";\r\nimport SessionSelectors from \"../../redux/session/selectors\";\r\nimport { IAppState } from \"../../redux/types\";\r\nimport UserSelectors from \"../../redux/users/selectors\";\r\n\r\nexport interface IChatRoomsRenderProps {\r\n    user: IUser;\r\n    sortedRooms: IRoom[];\r\n    recipientsMap: { [key: string]: IUser };\r\n    selectedRoomRecipientId: string | undefined;\r\n    updateRoomReadCounter: (args: IUpdateRoomReadCounterAPIParameters) => void;\r\n    onSendMessage: (args: Required<ISendMessageAPIParameters>) => void;\r\n    onSelectRoom: (room: IRoom) => void;\r\n}\r\n\r\nexport interface IChatRoomsContainerProps {\r\n    orgId: string;\r\n    render: (args: IChatRoomsRenderProps) => React.ReactElement;\r\n}\r\n\r\nconst ChatRoomsContainer: React.FC<IChatRoomsContainerProps> = (props) => {\r\n    const { orgId, render } = props;\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const chatRouteMatch = useRouteMatch<{ recipientId: string }>(\r\n        \"/app/orgs/:orgId/chat/:recipientId\"\r\n    );\r\n\r\n    const selectedRoomRecipientId = chatRouteMatch?.params.recipientId;\r\n\r\n    const user = useSelector<IAppState, IUser>((state) =>\r\n        SessionSelectors.assertGetUser(state)\r\n    );\r\n\r\n    const rooms = useSelector<IAppState, IRoom[]>((state) =>\r\n        RoomSelectors.getOrgRooms(state, orgId)\r\n    );\r\n\r\n    const org = useSelector<IAppState, IBlock>((state) =>\r\n        BlockSelectors.getBlock(state, orgId)\r\n    );\r\n\r\n    const collaborators = useSelector<IAppState, IUser[]>((state) =>\r\n        UserSelectors.getUsers(state, org.collaborators!)\r\n    );\r\n\r\n    const recipientsMap = collaborators.reduce((map, collaborator) => {\r\n        map[collaborator.customId] = collaborator;\r\n        return map;\r\n    }, {} as { [key: string]: IUser });\r\n\r\n    // TODO: how can we presort or keep some parts of the result, and only\r\n    // move the rooms when there's a new message ( sent or recived )?\r\n    const sortedRooms = React.useMemo(() => {\r\n        return rooms.sort((room1, room2) => {\r\n            const room1ChatsCount = room1.chats.length;\r\n            const room2ChatsCount = room2.chats.length;\r\n\r\n            if (room1ChatsCount && room2ChatsCount === 0) {\r\n                return -1;\r\n            } else if (room2ChatsCount && room1ChatsCount === 0) {\r\n                return 1;\r\n            } else if (room1ChatsCount === 0 && room2ChatsCount === 0) {\r\n                return 0;\r\n            }\r\n\r\n            // Sort by most recent chat timestamp\r\n            const room1LatestChat = room1.chats[room1.chats.length - 1];\r\n            const room2LatestChat = room2.chats[room2.chats.length - 1];\r\n\r\n            // TODO: Should we save the createdAt data as numbers to bypass using moment\r\n            // for quicker sorting\r\n            const room1LatestChatCreatedAt = moment(room1LatestChat.createdAt);\r\n            const room2LatestChatCreatedAt = moment(room2LatestChat.createdAt);\r\n\r\n            if (room1LatestChatCreatedAt.isAfter(room2LatestChatCreatedAt)) {\r\n                return -1;\r\n            } else if (\r\n                room1LatestChatCreatedAt.isBefore(room2LatestChatCreatedAt)\r\n            ) {\r\n                return 1;\r\n            } else {\r\n                return 0;\r\n            }\r\n        });\r\n    }, [rooms]);\r\n\r\n    const onSendMessage = React.useCallback(\r\n        (args: Required<ISendMessageAPIParameters>) => {\r\n            dispatch(sendMessageOpAction(args));\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    const updateRoomReadCounter = React.useCallback(\r\n        (args: IUpdateRoomReadCounterAPIParameters) => {\r\n            dispatch(\r\n                updateRoomReadCounterOpAction({\r\n                    ...args,\r\n                    deleteOpOnComplete: true,\r\n                })\r\n            );\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    const onSelectRoom = React.useCallback(\r\n        (room: IRoom) => {\r\n            if (room.recipientId !== selectedRoomRecipientId) {\r\n                const url = `/app/orgs/${room.orgId}/chat/${room.recipientId}`;\r\n                history.push(url);\r\n            }\r\n        },\r\n        [history, selectedRoomRecipientId]\r\n    );\r\n\r\n    return render({\r\n        sortedRooms,\r\n        recipientsMap,\r\n        selectedRoomRecipientId,\r\n        onSendMessage,\r\n        updateRoomReadCounter,\r\n        onSelectRoom,\r\n        user,\r\n    });\r\n};\r\n\r\nexport default ChatRoomsContainer;\r\n","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\chat\\ChatRoom.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\web\\web1\\constants.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\web\\web1\\IconLink.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\block\\loadBlockChildren.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\sprint\\getSprints.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\userAgent.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\block\\constants.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\block\\addCollaborators.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\feedback\\utils.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\block\\blockErrorMessages.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\block\\validation.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\system\\api.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\sprint\\utils.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\chat\\updateRoomReadCounter.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\BoardForm.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\block\\BlockThumnail.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\OrgHeaderOptionsMenu.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\RenderBlockChildren.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\utilities\\InputSearchIcon.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\Board.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\collaborator\\AddCollaboratorForm.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\utilities\\InputWithControls.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\org\\OrgExistsMessage.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\forms\\ColorPicker.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\org\\OrgCollaborationRequestThumbnail.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\chat\\ChatList.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\chat\\ChatRoomHeader.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\chat\\ChatInput.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\validationErrorMessages.js",[],["1346","1347"],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\system\\schema.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\sprint\\constants.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\notification\\constants.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\notification\\notificationErrorMessages.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\MenuWithTrigger.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\chat\\RoomsList.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\collaborator\\CollaborationRequests.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\collaborator\\CollaboratorList.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\BoardList.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\BoardHeader.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\BoardStatusResolutionAndLabelsForm.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\SprintsContainer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\TasksContainer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\CurrentSprintHeader.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\GroupedTasks.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\BoardHeaderOptionsMenu.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\collaborator\\AddCollaboratorFormItem.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\utilities\\Editable.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\sprint\\SprintFormInDrawer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\sprint\\SprintOptionsFormInDrawer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\TaskFormInDrawer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\chat\\Chat.tsx",["1348"],"import { css } from \"@emotion/css\";\r\nimport { Typography } from \"antd\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport { IChat } from \"../../models/chat/types\";\r\nimport { IUser } from \"../../models/user/user\";\r\nimport UserAvatar from \"../collaborator/UserAvatar\";\r\nimport StyledContainer from \"../styled/Container\";\r\n\r\nexport interface IChatProps {\r\n    chat: IChat;\r\n    sender: IUser;\r\n    hideAvatar?: boolean;\r\n    isUserSender?: boolean;\r\n}\r\n\r\nconst Chat: React.FC<IChatProps> = (props) => {\r\n    const { chat, sender, hideAvatar, isUserSender } = props;\r\n\r\n    const createdAt = moment(chat.createdAt);\r\n    const textClassName = css({\r\n        textAlign: isUserSender ? \"right\" : undefined,\r\n    });\r\n\r\n    return (\r\n        <StyledContainer\r\n            s={{\r\n                flex: 1,\r\n                // justifyContent: isUserSender ? \"flex-end\" : undefined,\r\n                flexDirection: isUserSender ? \"row-reverse\" : undefined,\r\n            }}\r\n        >\r\n            <StyledContainer\r\n                s={{\r\n                    width: 24,\r\n                }}\r\n            >\r\n                {!hideAvatar && <UserAvatar user={sender} />}\r\n            </StyledContainer>\r\n            <StyledContainer\r\n                s={{\r\n                    flex: 1,\r\n                    maxWidth: \"500px\",\r\n                    flexDirection: \"column\",\r\n                    marginLeft: isUserSender ? undefined : \"16px\",\r\n                    marginRight: isUserSender ? \"16px\" : undefined,\r\n                }}\r\n            >\r\n                <Typography.Paragraph\r\n                    className={textClassName}\r\n                    style={{ margin: 0 }}\r\n                >\r\n                    {chat.message}\r\n                </Typography.Paragraph>\r\n                {chat.queued ? (\r\n                    <Typography.Text type=\"secondary\" className={textClassName}>\r\n                        Queued for sending\r\n                    </Typography.Text>\r\n                ) : chat.sending ? (\r\n                    <Typography.Text type=\"secondary\" className={textClassName}>\r\n                        Sending...\r\n                    </Typography.Text>\r\n                ) : chat.errorMessage ? (\r\n                    <Typography.Text type=\"danger\" className={textClassName}>\r\n                        {chat.errorMessage}\r\n                    </Typography.Text>\r\n                ) : (\r\n                    <Typography.Text type=\"secondary\" className={textClassName}>\r\n                        {/* {createdAt.fromNow()}{\" \"} */}\r\n                        {createdAt.format(\"h:mm A, ddd MMM D YYYY\")}\r\n                    </Typography.Text>\r\n                )}\r\n            </StyledContainer>\r\n        </StyledContainer>\r\n    );\r\n};\r\n\r\nexport default React.memo(Chat);\r\n","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\sprint\\types.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\utilities\\layout.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\utilities\\handleOpResult.ts",["1349","1350"],"import { unwrapResult } from \"@reduxjs/toolkit\";\r\nimport { message } from \"antd\";\r\nimport { flattenErrorList } from \"../../utils/utils\";\r\nimport { getOpData } from \"../hooks/useOperation\";\r\n\r\nconst handleOpResult = async ({\r\n    result,\r\n    successMessage,\r\n    errorMessage,\r\n}: {\r\n    result: any;\r\n    successMessage: string;\r\n    errorMessage: string;\r\n}) => {\r\n    const op: any = unwrapResult(result);\r\n\r\n    if (!op) {\r\n        return;\r\n    }\r\n\r\n    const opData = getOpData(op);\r\n\r\n    if (opData.isCompleted) {\r\n        message.success(successMessage);\r\n    } else if (opData.isError) {\r\n        const flattenedError = flattenErrorList(opData.error);\r\n        message.error(flattenedError.error || errorMessage);\r\n    }\r\n};\r\n\r\nexport default handleOpResult;\r\n","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\utils\\groupByLabels.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\utils\\groupByAssignees.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\utils\\groupByStatus.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\utilities\\wrapMenu.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\chat\\RoomsListItem.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\collaborator\\CollaborationRequestThumbnail.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\collaborator\\CollaboratorThumbnail.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\styled\\List.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\SearchTasksInput.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\block\\BlockList.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\GroupedTasksDesktop.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\Sprints.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\GroupedTasksMobile.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\sprint\\SprintFormContainer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\sprint\\SprintOptionsFormContainer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\label\\LabelListContainer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\status\\StatusListContainer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\status\\ResolutionsListContainer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\TaskFormContainer.tsx",["1351"],"import { unwrapResult } from \"@reduxjs/toolkit\";\r\nimport { message } from \"antd\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    BlockType,\r\n    IBlock,\r\n    IFormBlock,\r\n    newFormBlock,\r\n} from \"../../models/block/block\";\r\nimport { ISprint } from \"../../models/sprint/types\";\r\nimport { getCurrentAndUpcomingSprints } from \"../../models/sprint/utils\";\r\nimport { IUser } from \"../../models/user/user\";\r\nimport { IAddBlockEndpointErrors } from \"../../net/block/types\";\r\nimport BlockSelectors from \"../../redux/blocks/selectors\";\r\nimport { addBlockOpAction } from \"../../redux/operations/block/addBlock\";\r\nimport { updateBlockOpAction } from \"../../redux/operations/block/updateBlock\";\r\nimport SessionSelectors from \"../../redux/session/selectors\";\r\nimport SprintSelectors from \"../../redux/sprints/selectors\";\r\nimport { AppDispatch, IAppState } from \"../../redux/types\";\r\nimport UserSelectors from \"../../redux/users/selectors\";\r\nimport { flattenErrorList, indexArray } from \"../../utils/utils\";\r\nimport useBlockPossibleParents from \"../hooks/useBlockPossibleParents\";\r\nimport { getOpData } from \"../hooks/useOperation\";\r\nimport { IFormError } from \"../utilities/types\";\r\nimport TaskForm, { ITaskFormValues } from \"./TaskForm\";\r\n\r\nexport interface ITaskFormContainerProps {\r\n    orgId: string;\r\n    onClose: () => void;\r\n    parentBlock?: IBlock;\r\n    block?: IBlock;\r\n}\r\n\r\nconst TaskFormContainer: React.FC<ITaskFormContainerProps> = (props) => {\r\n    const { onClose, orgId } = props;\r\n\r\n    const dispatch: AppDispatch = useDispatch();\r\n    const user = useSelector(SessionSelectors.assertGetUser);\r\n    const org = useSelector<IAppState, IBlock>((state) => {\r\n        return BlockSelectors.getBlock(state, orgId)!;\r\n    });\r\n\r\n    const [parentId, setParentId] = React.useState(\r\n        props.parentBlock?.customId || props.block?.parent\r\n    );\r\n\r\n    const parentBlock = useSelector<IAppState, IBlock | undefined>((state) => {\r\n        if (parentId) {\r\n            return BlockSelectors.getBlock(state, parentId);\r\n        } else if (props.parentBlock) {\r\n            return props.parentBlock;\r\n        } else if (props.block) {\r\n            return BlockSelectors.getBlock(state, props.block.parent!);\r\n        }\r\n    });\r\n\r\n    if (!parentBlock || parentBlock?.type !== BlockType.Board) {\r\n        throw new Error(\"Parent is not a board\");\r\n    }\r\n\r\n    const sprints = useSelector<IAppState, ISprint[]>((state) => {\r\n        const totalSprints = SprintSelectors.getBoardSprints(\r\n            state,\r\n            parentBlock!.customId\r\n        );\r\n\r\n        return getCurrentAndUpcomingSprints(totalSprints);\r\n    });\r\n\r\n    const memoizedSprintsMap = indexArray(sprints, { path: \"customId\" });\r\n    const statusList = React.useMemo(() => parentBlock?.boardStatuses || [], [\r\n        parentBlock?.boardStatuses,\r\n    ]);\r\n    const statusMap = React.useMemo(\r\n        () => indexArray(statusList, { path: \"customId\" }),\r\n        [statusList]\r\n    );\r\n\r\n    const labelList = React.useMemo(() => parentBlock?.boardLabels || [], [\r\n        parentBlock?.boardLabels,\r\n    ]);\r\n    const labelsMap = React.useMemo(\r\n        () => indexArray(labelList, { path: \"customId\" }),\r\n        [labelList]\r\n    );\r\n\r\n    const resolutionsList = React.useMemo(\r\n        () => parentBlock?.boardResolutions || [],\r\n        [parentBlock?.boardResolutions]\r\n    );\r\n    const resolutionsMap = React.useMemo(\r\n        () => indexArray(resolutionsList, { path: \"customId\" }),\r\n        [resolutionsList]\r\n    );\r\n\r\n    const collaboratorIds = Array.isArray(org.collaborators)\r\n        ? org.collaborators\r\n        : [];\r\n\r\n    const collaborators = useSelector<IAppState, IUser[]>((state) =>\r\n        UserSelectors.getUsers(state, collaboratorIds)\r\n    );\r\n\r\n    const [existingBlock, setExistingBlock] = React.useState<\r\n        IBlock | undefined\r\n    >(() => props.block);\r\n\r\n    const [blockData, setBlock] = React.useState<IFormBlock>(\r\n        () => props.block || newFormBlock(user, BlockType.Task, parentBlock)\r\n    );\r\n\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [errors, setErrors] = React.useState<\r\n        IFormError<IAddBlockEndpointErrors[\"block\"]> | undefined\r\n    >();\r\n\r\n    const possibleParents = useBlockPossibleParents(\r\n        BlockType.Task,\r\n        blockData.parent\r\n    );\r\n\r\n    const onSubmit = async (values: ITaskFormValues) => {\r\n        const data = { ...blockData, ...values };\r\n\r\n        setLoading(true);\r\n        setBlock(data);\r\n\r\n        const result = existingBlock\r\n            ? await dispatch(\r\n                  updateBlockOpAction({\r\n                      data,\r\n                      blockId: existingBlock.customId,\r\n                      deleteOpOnComplete: true,\r\n                  })\r\n              )\r\n            : await dispatch(\r\n                  addBlockOpAction({\r\n                      block: data,\r\n                      deleteOpOnComplete: true,\r\n                  })\r\n              );\r\n\r\n        const op = unwrapResult(result);\r\n\r\n        if (!op) {\r\n            return;\r\n        }\r\n\r\n        const opData = getOpData(op);\r\n        const block = op.status.data;\r\n\r\n        setLoading(false);\r\n\r\n        if (opData.error) {\r\n            if (existingBlock) {\r\n                message.error(\"Error updating task\");\r\n            } else {\r\n                message.error(\"Error creating task\");\r\n            }\r\n\r\n            const flattenedErrors = flattenErrorList(opData.error);\r\n            setErrors({\r\n                errors: flattenedErrors,\r\n                errorList: opData.error,\r\n            });\r\n        } else {\r\n            if (existingBlock) {\r\n                message.success(\"Task updated successfully\");\r\n            } else {\r\n                message.success(\"Task created successfully\");\r\n            }\r\n\r\n            setExistingBlock(block);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <TaskForm\r\n            value={blockData as any}\r\n            collaborators={collaborators}\r\n            labelList={labelList}\r\n            labelsMap={labelsMap}\r\n            statusList={statusList}\r\n            resolutionsList={resolutionsList}\r\n            user={user}\r\n            onClose={onClose}\r\n            task={existingBlock}\r\n            onSubmit={onSubmit}\r\n            isSubmitting={loading}\r\n            errors={errors?.errors}\r\n            possibleParents={possibleParents}\r\n            onChangeParent={setParentId}\r\n            board={parentBlock!}\r\n            sprints={sprints}\r\n            sprintsMap={memoizedSprintsMap}\r\n            statusMap={statusMap}\r\n            resolutionsMap={resolutionsMap}\r\n        />\r\n    );\r\n};\r\n\r\nexport default React.memo(TaskFormContainer);\r\n","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\utils\\groupBySprints.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\sprint\\updateSprint.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\sprint\\updateSprintOptions.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\sprint\\setupSprints.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\hooks\\useBlockPossibleParents.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\styled\\cloneWithWidth.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\TaskList.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\board\\Column.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\sprint\\SprintOptionsForm.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\sprint\\SprintForm.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\status\\ResolutionsList.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\label\\LabelList.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\status\\StatusList.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\TaskForm.tsx",["1352"],"import { RightCircleTwoTone } from \"@ant-design/icons\";\r\nimport styled from \"@emotion/styled\";\r\nimport { Button, DatePicker, Form, List, Select, Typography } from \"antd\";\r\nimport { FormikProps } from \"formik\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport { ArrowLeft } from \"react-feather\";\r\nimport {\r\n    IAssigneeInput,\r\n    IBlock,\r\n    IBlockAssignedLabelInput,\r\n    IBlockLabel,\r\n    IBlockStatus,\r\n    IBoardTaskResolution,\r\n    IFormBlock,\r\n    ISubTaskInput,\r\n    ITaskSprint,\r\n} from \"../../models/block/block\";\r\nimport { ISprint } from \"../../models/sprint/types\";\r\nimport { IUser } from \"../../models/user/user\";\r\nimport { getDateString, indexArray } from \"../../utils/utils\";\r\nimport BlockParentSelection from \"../block/BlockParentSelection\";\r\nimport blockValidationSchemas from \"../block/validation\";\r\nimport BoardStatusResolutionAndLabelsForm, {\r\n    BoardStatusResolutionAndLabelsFormType,\r\n} from \"../board/BoardStatusResolutionAndLabelsForm\";\r\nimport CollaboratorThumbnail from \"../collaborator/CollaboratorThumbnail\";\r\nimport CommentsContainer from \"../comments/CommentsContainer\";\r\nimport FormError from \"../forms/FormError\";\r\nimport { getFormError, IFormikFormErrors } from \"../forms/formik-utils\";\r\nimport {\r\n    formContentWrapperStyle,\r\n    formInputContentWrapperStyle,\r\n    StyledForm,\r\n} from \"../forms/FormStyledComponents\";\r\nimport useFormHelpers from \"../hooks/useFormHelpers\";\r\nimport SprintFormInDrawer from \"../sprint/SprintFormInDrawer\";\r\nimport StyledContainer from \"../styled/Container\";\r\nimport InputWithControls from \"../utilities/InputWithControls\";\r\nimport EditPriority from \"./EditPriority\";\r\nimport { TaskPriority } from \"./Priority\";\r\nimport SelectTaskSprint from \"./SelectTaskSprint\";\r\nimport SubTaskFormList from \"./SubTaskFormList\";\r\nimport TaskCollaboratorThumbnail from \"./TaskCollaboratorThumbnail\";\r\nimport TaskLabels from \"./TaskLabels\";\r\nimport TaskStatus from \"./TaskStatus\";\r\n\r\nexport type ITaskFormValues = IFormBlock;\r\n\r\ntype TaskFormFormikProps = FormikProps<ITaskFormValues>;\r\nexport type TaskFormErrors = IFormikFormErrors<ITaskFormValues>;\r\n\r\nexport interface ITaskFormProps {\r\n    user: IUser;\r\n    collaborators: IUser[];\r\n    statusList: IBlockStatus[];\r\n    resolutionsList: IBoardTaskResolution[];\r\n    labelList: IBlockLabel[];\r\n    labelsMap: { [key: string]: IBlockLabel };\r\n    statusMap: { [key: string]: IBlockStatus };\r\n    resolutionsMap: { [key: string]: IBoardTaskResolution };\r\n    possibleParents: IBlock[];\r\n    value: ITaskFormValues;\r\n    board: IBlock;\r\n    sprints: ISprint[];\r\n    sprintsMap: { [key: string]: ISprint };\r\n    onClose: () => void;\r\n    onSubmit: (values: ITaskFormValues) => void;\r\n    onChangeParent: (parentId: string) => void;\r\n\r\n    task?: IBlock;\r\n    isSubmitting?: boolean;\r\n    errors?: TaskFormErrors;\r\n}\r\n\r\nconst StyledContainerAsLink = StyledContainer.withComponent(\"a\");\r\n\r\nconst TaskForm: React.FC<ITaskFormProps> = (props) => {\r\n    const {\r\n        task,\r\n        isSubmitting,\r\n        possibleParents,\r\n        value,\r\n        collaborators,\r\n        statusList,\r\n        labelList,\r\n        labelsMap,\r\n        resolutionsList,\r\n        user,\r\n        board,\r\n        sprints,\r\n        sprintsMap,\r\n        statusMap,\r\n        resolutionsMap,\r\n        onClose,\r\n        onSubmit,\r\n        errors: externalErrors,\r\n    } = props;\r\n\r\n    const [\r\n        subFormType,\r\n        setSubFormType,\r\n    ] = React.useState<BoardStatusResolutionAndLabelsFormType | null>(null);\r\n\r\n    const [showSprintForm, setShowSprintForm] = React.useState<boolean>(false);\r\n\r\n    const toggleShowSprintForm = React.useCallback(() => {\r\n        setShowSprintForm(!showSprintForm);\r\n    }, [showSprintForm]);\r\n\r\n    const closeForm = React.useCallback(() => setSubFormType(null), []);\r\n\r\n    const [indexedCollaborators] = React.useState(\r\n        indexArray(props.collaborators, {\r\n            path: \"customId\",\r\n        })\r\n    );\r\n\r\n    const {\r\n        formik,\r\n        formikHelpers,\r\n        formikChangedFieldsHelpers,\r\n    } = useFormHelpers({\r\n        errors: externalErrors,\r\n        formikProps: {\r\n            // TODO: show a message on form submit or close the form\r\n            onSubmit,\r\n            initialValues: value,\r\n            validationSchema: !task\r\n                ? blockValidationSchemas.newTask\r\n                : blockValidationSchemas.updateTask,\r\n        },\r\n    });\r\n\r\n    const status = formik.values.status;\r\n\r\n    React.useEffect(() => {\r\n        if (!status && statusList.length > 0) {\r\n            formik.setValues({\r\n                ...formik.values,\r\n                status: statusList[0].customId,\r\n            });\r\n        }\r\n    }, [statusList, status, formik, user.customId]);\r\n\r\n    const onChangeParent = (parentId: string) => {\r\n        if (parentId === formik.values.parent) {\r\n            return;\r\n        }\r\n\r\n        if (parentId === task?.parent) {\r\n            formik.setValues({\r\n                ...formik.values,\r\n                parent: parentId,\r\n                labels: task.labels,\r\n                status: task.status,\r\n            });\r\n\r\n            return;\r\n        } else {\r\n            formik.setValues({\r\n                ...formik.values,\r\n                parent: parentId,\r\n                labels: [],\r\n                status: null,\r\n                taskSprint: null,\r\n                taskResolution: null,\r\n            });\r\n        }\r\n\r\n        formikChangedFieldsHelpers.pushFields([\"parent\", \"labels\", \"status\"]);\r\n    };\r\n\r\n    const renderParentInput = (formikProps: TaskFormFormikProps) => {\r\n        const { touched, errors, values } = formikProps;\r\n\r\n        return (\r\n            <Form.Item\r\n                label=\"Board\"\r\n                help={touched.parent && <FormError error={errors.parent} />}\r\n                labelCol={{ span: 24 }}\r\n                wrapperCol={{ span: 24 }}\r\n            >\r\n                <BlockParentSelection\r\n                    value={values.parent}\r\n                    possibleParents={possibleParents}\r\n                    onChange={(val) => onChangeParent(val)}\r\n                    disabled={isSubmitting}\r\n                    placeholder=\"Select board\"\r\n                />\r\n            </Form.Item>\r\n        );\r\n    };\r\n\r\n    const renderNameInput = () => {\r\n        const { touched, values, errors } = formik;\r\n\r\n        return (\r\n            <Form.Item\r\n                label=\"Task\"\r\n                help={touched.name && <FormError error={errors.name} />}\r\n                labelCol={{ span: 24 }}\r\n                wrapperCol={{ span: 24 }}\r\n            >\r\n                <InputWithControls\r\n                    useTextArea\r\n                    autoSize={{ minRows: 2, maxRows: 4 }}\r\n                    value={values.name}\r\n                    onChange={(val) => {\r\n                        formik.setFieldValue(\"name\", val);\r\n                        formikChangedFieldsHelpers.addField(\"name\");\r\n                    }}\r\n                    revertChanges={() => {\r\n                        formikHelpers.revertChanges(\"name\");\r\n                    }}\r\n                    autoComplete=\"off\"\r\n                    disabled={isSubmitting}\r\n                    inputOnly={!task}\r\n                    placeholder=\"Task\"\r\n                />\r\n            </Form.Item>\r\n        );\r\n    };\r\n\r\n    const renderDescriptionInput = (formikProps: TaskFormFormikProps) => {\r\n        const { touched, values, errors } = formikProps;\r\n\r\n        return (\r\n            <Form.Item\r\n                label=\"Description\"\r\n                help={\r\n                    touched.description && (\r\n                        <FormError error={errors.description} />\r\n                    )\r\n                }\r\n                labelCol={{ span: 24 }}\r\n                wrapperCol={{ span: 24 }}\r\n            >\r\n                <InputWithControls\r\n                    useTextArea\r\n                    value={values.description}\r\n                    onChange={(val) => {\r\n                        formik.setFieldValue(\"description\", val);\r\n                        formikChangedFieldsHelpers.addField(\"description\");\r\n                    }}\r\n                    revertChanges={() => {\r\n                        formikHelpers.revertChanges(\"description\");\r\n                    }}\r\n                    autoComplete=\"off\"\r\n                    disabled={isSubmitting}\r\n                    inputOnly={!task}\r\n                    placeholder=\"Description\"\r\n                    paragraphProps={{ type: \"secondary\" }}\r\n                />\r\n            </Form.Item>\r\n        );\r\n    };\r\n\r\n    const renderPriority = (formikProps: TaskFormFormikProps) => {\r\n        const { setFieldValue, values } = formikProps;\r\n\r\n        return (\r\n            <Form.Item\r\n                label=\"Priority\"\r\n                labelCol={{ span: 24 }}\r\n                wrapperCol={{ span: 24 }}\r\n                labelAlign=\"left\"\r\n            >\r\n                <EditPriority\r\n                    onChange={(val: string) => {\r\n                        setFieldValue(\"priority\", val);\r\n                        formikChangedFieldsHelpers.addField(\"priority\");\r\n                    }}\r\n                    value={values.priority as TaskPriority}\r\n                    disabled={isSubmitting}\r\n                />\r\n            </Form.Item>\r\n        );\r\n    };\r\n\r\n    const renderSprintInput = () => {\r\n        if (!board.sprintOptions) {\r\n            return null;\r\n        }\r\n\r\n        const input = (\r\n            <SelectTaskSprint\r\n                sprints={sprints}\r\n                sprintsMap={sprintsMap}\r\n                task={formik.values as IBlock}\r\n                disabled={isSubmitting}\r\n                onAddNewSprint={toggleShowSprintForm}\r\n                onChangeSprint={(val) => {\r\n                    if (val === BACKLOG) {\r\n                        formik.setFieldValue(\"taskSprint\", null);\r\n                    } else {\r\n                        formik.setFieldValue(\"taskSprint\", {\r\n                            sprintId: val,\r\n                            assignedAt: getDateString(),\r\n                            assignedBy: user.customId,\r\n                        } as ITaskSprint);\r\n                    }\r\n                    formikChangedFieldsHelpers.addField(\"taskSprint\");\r\n                }}\r\n            />\r\n        );\r\n\r\n        return (\r\n            <Form.Item\r\n                label=\"Sprint\"\r\n                labelCol={{ span: 24 }}\r\n                wrapperCol={{ span: 24 }}\r\n                labelAlign=\"left\"\r\n            >\r\n                {input}\r\n            </Form.Item>\r\n        );\r\n    };\r\n\r\n    const onChangeStatus = React.useCallback(\r\n        async (val: string) => {\r\n            if (val === task?.status) {\r\n                formik.setValues({\r\n                    ...formik.values,\r\n                    status: task.status,\r\n                });\r\n            } else {\r\n                formik.setValues({\r\n                    ...formik.values,\r\n                    status: val,\r\n                });\r\n            }\r\n\r\n            formikChangedFieldsHelpers.pushFields([\"status\"]);\r\n\r\n            return true;\r\n        },\r\n        [formik, formikChangedFieldsHelpers, task]\r\n    );\r\n\r\n    const onChangeResolution = React.useCallback(\r\n        (val: string) => {\r\n            formik.setValues({\r\n                ...formik.values,\r\n                taskResolution: val,\r\n            });\r\n\r\n            formikChangedFieldsHelpers.pushFields([\"taskResolution\"]);\r\n        },\r\n        [formik, formikChangedFieldsHelpers]\r\n    );\r\n\r\n    const onSelectAddNewStatus = React.useCallback(() => {\r\n        setSubFormType(BoardStatusResolutionAndLabelsFormType.STATUS);\r\n    }, []);\r\n\r\n    const onSelectAddNewResolution = React.useCallback(() => {\r\n        setSubFormType(BoardStatusResolutionAndLabelsFormType.RESOLUTIONS);\r\n    }, []);\r\n\r\n    const renderStatus = (formikProps: TaskFormFormikProps) => {\r\n        const { values } = formikProps;\r\n\r\n        return (\r\n            <Form.Item\r\n                label=\"Status\"\r\n                labelCol={{ span: 24 }}\r\n                wrapperCol={{ span: 24 }}\r\n                labelAlign=\"left\"\r\n            >\r\n                <TaskStatus\r\n                    noResolutionModal\r\n                    statusList={statusList}\r\n                    resolutionsList={resolutionsList}\r\n                    statusMap={statusMap}\r\n                    resolutionsMap={resolutionsMap}\r\n                    onChangeStatus={onChangeStatus}\r\n                    onChangeResolution={onChangeResolution}\r\n                    task={values as IBlock}\r\n                    disabled={isSubmitting}\r\n                    onSelectAddNewStatus={onSelectAddNewStatus}\r\n                    onSelectAddNewResolution={onSelectAddNewResolution}\r\n                />\r\n            </Form.Item>\r\n        );\r\n    };\r\n\r\n    const onChangeTaskLabels = React.useCallback(\r\n        (val: IBlockAssignedLabelInput[]) => {\r\n            formik.setFieldValue(\"labels\", val);\r\n            formikChangedFieldsHelpers.addField(\"labels\");\r\n        },\r\n        [formik, formikChangedFieldsHelpers]\r\n    );\r\n\r\n    const onSelectAddNewLabel = React.useCallback(() => {\r\n        setSubFormType(BoardStatusResolutionAndLabelsFormType.LABELS);\r\n    }, []);\r\n\r\n    // TODO: extract these fields into separate components with React.memo for speed\r\n    const renderLabels = (formikProps: TaskFormFormikProps) => {\r\n        const { values } = formikProps;\r\n\r\n        return (\r\n            <Form.Item\r\n                label=\"Labels\"\r\n                labelCol={{ span: 24 }}\r\n                wrapperCol={{ span: 24 }}\r\n                labelAlign=\"left\"\r\n            >\r\n                <TaskLabels\r\n                    labelList={labelList}\r\n                    labelsMap={labelsMap}\r\n                    onChange={onChangeTaskLabels}\r\n                    labels={values.labels}\r\n                    disabled={isSubmitting}\r\n                    onSelectAddNewLabel={onSelectAddNewLabel}\r\n                />\r\n            </Form.Item>\r\n        );\r\n    };\r\n\r\n    const renderDueDateInput = (formikProps: TaskFormFormikProps) => {\r\n        const { values, setFieldValue } = formikProps;\r\n\r\n        return (\r\n            <Form.Item\r\n                label=\"Due Date\"\r\n                labelCol={{ span: 24 }}\r\n                wrapperCol={{ span: 24 }}\r\n                labelAlign=\"left\"\r\n            >\r\n                <DatePicker\r\n                    // showTime\r\n                    format=\"ddd, MMM DD YYYY\"\r\n                    placeholder=\"Due date\"\r\n                    onChange={(val) => {\r\n                        setFieldValue(\r\n                            \"dueAt\",\r\n                            val\r\n                                ? val.hour(23).minute(59).second(59).valueOf()\r\n                                : null\r\n                        );\r\n                        formikChangedFieldsHelpers.addField(\"dueAt\");\r\n                    }}\r\n                    value={values.dueAt ? moment(values.dueAt) : undefined}\r\n                    style={{ width: \"100%\" }}\r\n                    disabled={isSubmitting}\r\n                />\r\n            </Form.Item>\r\n        );\r\n    };\r\n\r\n    const unassignCollaborator = (\r\n        collaboratorData: IAssigneeInput,\r\n        assignees: IAssigneeInput[] = []\r\n    ) => {\r\n        const index = assignees.findIndex((next) => {\r\n            return next.userId === collaboratorData.userId;\r\n        });\r\n\r\n        if (index !== -1) {\r\n            const updated = [...assignees];\r\n            updated.splice(index, 1);\r\n            return updated;\r\n        }\r\n\r\n        return assignees;\r\n    };\r\n\r\n    const assignCollaborator = (\r\n        collaborator: IUser,\r\n        assignees: IAssigneeInput[] = []\r\n    ): IAssigneeInput[] => {\r\n        const collaboratorExists = !!assignees.find((next) => {\r\n            return collaborator.customId === next.userId;\r\n        });\r\n\r\n        if (!collaboratorExists) {\r\n            return [\r\n                ...assignees,\r\n                {\r\n                    userId: collaborator.customId,\r\n                },\r\n            ];\r\n        }\r\n\r\n        return assignees;\r\n    };\r\n\r\n    const renderAssignees = (formikProps: TaskFormFormikProps) => {\r\n        const { values, setFieldValue } = formikProps;\r\n\r\n        if (!Array.isArray(values.assignees)) {\r\n            return null;\r\n        }\r\n\r\n        if (values.assignees.length === 0) {\r\n            return \"Not assigned to anybody yet\";\r\n        }\r\n\r\n        return (\r\n            <List\r\n                dataSource={values.assignees}\r\n                renderItem={(item) => (\r\n                    <List.Item>\r\n                        <TaskCollaboratorThumbnail\r\n                            key={item.userId}\r\n                            collaborator={indexedCollaborators[item.userId]}\r\n                            onUnassign={() => {\r\n                                setFieldValue(\r\n                                    \"assignees\",\r\n                                    unassignCollaborator(item, values.assignees)\r\n                                );\r\n\r\n                                formikChangedFieldsHelpers.addField(\r\n                                    \"assignees\"\r\n                                );\r\n                            }}\r\n                            disabled={isSubmitting}\r\n                        />\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        );\r\n    };\r\n\r\n    const renderAssignedToInput = (formikProps: TaskFormFormikProps) => {\r\n        const { setFieldValue, values } = formikProps;\r\n\r\n        return (\r\n            <Form.Item\r\n                label=\"Assigned To\"\r\n                labelCol={{ span: 24 }}\r\n                wrapperCol={{ span: 24 }}\r\n            >\r\n                <Select\r\n                    placeholder=\"Select collaborator\"\r\n                    value={undefined}\r\n                    onChange={(index) => {\r\n                        setFieldValue(\r\n                            \"assignees\",\r\n                            assignCollaborator(\r\n                                collaborators[Number(index)],\r\n                                values.assignees\r\n                            )\r\n                        );\r\n                        formikChangedFieldsHelpers.addField(\"assignees\");\r\n                    }}\r\n                    disabled={isSubmitting}\r\n                    optionLabelProp=\"label\"\r\n                >\r\n                    {collaborators.map((collaborator, index) => {\r\n                        return (\r\n                            <Select.Option\r\n                                value={index}\r\n                                key={collaborator.customId}\r\n                                label={collaborator.name}\r\n                            >\r\n                                <CollaboratorThumbnail\r\n                                    collaborator={collaborator}\r\n                                />\r\n                            </Select.Option>\r\n                        );\r\n                    })}\r\n                </Select>\r\n                <StyledContainerAsLink\r\n                    role=\"button\"\r\n                    onClick={() => {\r\n                        if (!isSubmitting) {\r\n                            setFieldValue(\r\n                                \"assignees\",\r\n                                assignCollaborator(user, values.assignees)\r\n                            );\r\n                            formikChangedFieldsHelpers.addField(\"assignees\");\r\n                        }\r\n                    }}\r\n                    s={{\r\n                        display: \"inline-flex\",\r\n                        alignItems: \"center\",\r\n                        lineHeight: \"32px\",\r\n                        cursor: isSubmitting ? \"not-allowed\" : undefined,\r\n                        color: isSubmitting ? \"#f0f0f0\" : undefined,\r\n                    }}\r\n                >\r\n                    {!isSubmitting && (\r\n                        <RightCircleTwoTone style={{ fontSize: \"16px\" }} />\r\n                    )}\r\n                    <Typography.Text\r\n                        style={{\r\n                            display: \"inline-block\",\r\n                            marginLeft: isSubmitting ? \"0px\" : \"8px\",\r\n                            color: \"inherit\",\r\n                        }}\r\n                    >\r\n                        Assign To Me\r\n                    </Typography.Text>\r\n                </StyledContainerAsLink>\r\n                <StyledTaskCollaboaratorsContainer>\r\n                    {renderAssignees(formikProps)}\r\n                </StyledTaskCollaboaratorsContainer>\r\n            </Form.Item>\r\n        );\r\n    };\r\n\r\n    const onChangeSubTasks = (\r\n        subTasks: ISubTaskInput[],\r\n        formikProps: TaskFormFormikProps\r\n    ) => {\r\n        const { values, setValues } = formikProps;\r\n        const update: ITaskFormValues = { ...values, subTasks };\r\n        setValues(update);\r\n        formikChangedFieldsHelpers.addField(\"subTasks\");\r\n    };\r\n\r\n    const onDiscardSubTaskChanges = (index: number) => {\r\n        const taskInitialValue = formik.initialValues || {};\r\n        const initialSubTasks = taskInitialValue.subTasks || [];\r\n        const initialValue = initialSubTasks[index];\r\n\r\n        if (initialValue) {\r\n            formik.setFieldValue(`subTasks.[${index}]`, initialValue);\r\n            formikChangedFieldsHelpers.addField(\"subTasks\");\r\n        }\r\n    };\r\n\r\n    const renderSubTasks = (formikProps: TaskFormFormikProps) => {\r\n        const { values, touched, errors } = formikProps;\r\n\r\n        return (\r\n            <StyledContainer\r\n                s={{\r\n                    flexDirection: \"column\",\r\n                    width: \"100%\",\r\n                    marginBottom: \"24px\",\r\n                    borderTop: \"1px solid #f0f0f0\",\r\n                    borderBottom: \"1px solid #f0f0f0\",\r\n                    padding: \"8px 0px\",\r\n                }}\r\n            >\r\n                <SubTaskFormList\r\n                    user={user}\r\n                    subTasks={values.subTasks || []}\r\n                    errors={errors.subTasks as any}\r\n                    touched={touched.subTasks as any}\r\n                    onChange={(subTasks) =>\r\n                        onChangeSubTasks(subTasks, formikProps)\r\n                    }\r\n                    disabled={isSubmitting}\r\n                    onAddSubTask={(subTask) => {\r\n                        formikHelpers.addToArrayField(\r\n                            \"subTasks\",\r\n                            subTask,\r\n                            {},\r\n                            {},\r\n                            value.subTasks?.length\r\n                        );\r\n                        formikChangedFieldsHelpers.addField(\"subTasks\");\r\n                    }}\r\n                    onDeleteSubTask={(index) => {\r\n                        formikHelpers.deleteInArrayField(\"subTasks\", index);\r\n                    }}\r\n                    onDiscardSubTaskChanges={onDiscardSubTaskChanges}\r\n                />\r\n            </StyledContainer>\r\n        );\r\n    };\r\n\r\n    const renderComments = () => {\r\n        if (!task) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <Form.Item\r\n                // label=\"Comments\"\r\n                labelCol={{ span: 24 }}\r\n                wrapperCol={{ span: 24 }}\r\n                // style={{ margin: \"24px 0\" }}\r\n            >\r\n                <CommentsContainer taskId={task.customId} />\r\n            </Form.Item>\r\n        );\r\n    };\r\n\r\n    const getSubmitLabel = () => {\r\n        if (isSubmitting) {\r\n            if (task) {\r\n                return \"Saving Changes\";\r\n            } else {\r\n                return \"Creating Task\";\r\n            }\r\n        } else {\r\n            if (task) {\r\n                return \"Save Changes\";\r\n            } else {\r\n                return \"Create Task\";\r\n            }\r\n        }\r\n    };\r\n\r\n    const renderControls = () => {\r\n        return (\r\n            <StyledContainer>\r\n                <Button\r\n                    block\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    loading={isSubmitting}\r\n                    disabled={!formikChangedFieldsHelpers.hasChanges()}\r\n                >\r\n                    {getSubmitLabel()}\r\n                </Button>\r\n            </StyledContainer>\r\n        );\r\n    };\r\n\r\n    const renderForm = (formikProps: TaskFormFormikProps) => {\r\n        const { handleSubmit, errors } = formikProps;\r\n        const globalError = getFormError(errors);\r\n\r\n        return (\r\n            <StyledForm onSubmit={handleSubmit}>\r\n                {subFormType && (\r\n                    <BoardStatusResolutionAndLabelsForm\r\n                        visible\r\n                        block={board}\r\n                        onClose={closeForm}\r\n                        active={subFormType}\r\n                    />\r\n                )}\r\n                {showSprintForm && (\r\n                    <SprintFormInDrawer\r\n                        visible\r\n                        board={board}\r\n                        onClose={toggleShowSprintForm}\r\n                    />\r\n                )}\r\n                <StyledContainer s={formContentWrapperStyle}>\r\n                    <StyledContainer s={formInputContentWrapperStyle}>\r\n                        <StyledContainer s={{ paddingBottom: \"16px\" }}>\r\n                            <Button\r\n                                style={{ cursor: \"pointer\" }}\r\n                                onClick={onClose}\r\n                                className=\"icon-btn\"\r\n                            >\r\n                                <ArrowLeft />\r\n                            </Button>\r\n                        </StyledContainer>\r\n                        {globalError && (\r\n                            <Form.Item>\r\n                                <FormError error={globalError} />\r\n                            </Form.Item>\r\n                        )}\r\n                        {renderNameInput()}\r\n                        {renderDescriptionInput(formikProps)}\r\n                        {renderParentInput(formikProps)}\r\n                        {renderPriority(formikProps)}\r\n                        {renderSprintInput()}\r\n                        {renderStatus(formikProps)}\r\n                        {renderLabels(formikProps)}\r\n                        {renderDueDateInput(formikProps)}\r\n                        {renderAssignedToInput(formikProps)}\r\n                        {renderSubTasks(formikProps)}\r\n                        {/* {renderComments()} */}\r\n                    </StyledContainer>\r\n                    {renderControls()}\r\n                </StyledContainer>\r\n            </StyledForm>\r\n        );\r\n    };\r\n\r\n    return renderForm(formik);\r\n};\r\n\r\nconst StyledTaskCollaboaratorsContainer = styled.div({\r\n    marginBottom: 16,\r\n});\r\n\r\nexport default React.memo(TaskForm);\r\n\r\nconst BACKLOG = \"Backlog\";\r\n","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\block\\sortBlocks.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\label\\validation.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\forms\\utils.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\sprint\\utils.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\hooks\\useArray.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\Task.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\status\\ResolutionFormItem.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\label\\LabelFormItem.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\status\\StatusFormItem.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\block\\BlockParentSelection.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\SubTaskFormList.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\TaskLabels.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\SelectTaskSprint.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\TaskCollaboratorThumbnail.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\EditPriority.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\TaskStatus.tsx",["1353","1354"],"import { CaretDownOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { Dropdown, Menu, Space } from \"antd\";\r\nimport React from \"react\";\r\nimport { Minus } from \"react-feather\";\r\nimport {\r\n    IBlock,\r\n    IBlockStatus,\r\n    IBoardTaskResolution,\r\n} from \"../../models/block/block\";\r\nimport StyledContainer from \"../styled/Container\";\r\nimport SelectResolutionModal from \"./SelectResolutionModal\";\r\nimport TaskResolution from \"./TaskResolution\";\r\n\r\nexport interface ITaskStatusProps {\r\n    task: IBlock;\r\n    statusList: IBlockStatus[];\r\n    statusMap: { [key: string]: IBlockStatus };\r\n    resolutionsList: IBoardTaskResolution[];\r\n    resolutionsMap: { [key: string]: IBoardTaskResolution };\r\n    onChangeStatus: (statusId: string, resolutionId?: string) => void;\r\n    onChangeResolution: (value: string) => void;\r\n    onSelectAddNewStatus: () => void;\r\n    onSelectAddNewResolution: () => void;\r\n\r\n    disabled?: boolean;\r\n    className?: string;\r\n    noResolutionModal?: boolean;\r\n}\r\n\r\ninterface IResolutionModalState {\r\n    statusId?: string;\r\n    showModal?: boolean;\r\n}\r\n\r\nconst ADD_NEW_STATUS_KEY = \"add-new-status\";\r\n\r\n// TODO: should we show a loading screen or no when the status is changed?\r\n\r\nconst TaskStatus: React.FC<ITaskStatusProps> = (props) => {\r\n    const {\r\n        task,\r\n        onChangeStatus,\r\n        onChangeResolution,\r\n        onSelectAddNewStatus,\r\n        onSelectAddNewResolution,\r\n        disabled,\r\n        className,\r\n        statusList,\r\n        statusMap,\r\n        resolutionsList,\r\n        resolutionsMap,\r\n        noResolutionModal,\r\n    } = props;\r\n\r\n    const [\r\n        resolutionModalState,\r\n        setResolutionModalState,\r\n    ] = React.useState<IResolutionModalState>({});\r\n\r\n    const statusId = task.status;\r\n    const resolutionId = task.taskResolution;\r\n    const selectedStatus = statusId ? statusMap[statusId] : null;\r\n    const lastStatus = statusList[statusList.length - 1];\r\n    const selectedStatusIsLastStatus =\r\n        lastStatus &&\r\n        selectedStatus &&\r\n        selectedStatus.customId === lastStatus.customId;\r\n\r\n    const handleResolutionModalChange = React.useCallback(\r\n        (selectedResolutionId?: string) => {\r\n            const selectedStatusId = resolutionModalState.statusId!;\r\n            setResolutionModalState({});\r\n            onChangeStatus(selectedStatusId, selectedResolutionId);\r\n        },\r\n        [resolutionModalState, onChangeStatus]\r\n    );\r\n\r\n    const onContinueWithoutResolution = React.useCallback(() => {\r\n        handleResolutionModalChange();\r\n    }, [handleResolutionModalChange]);\r\n\r\n    const onCancel = React.useCallback(() => {\r\n        setResolutionModalState({});\r\n    }, [handleResolutionModalChange]);\r\n\r\n    const handleStatusChange = React.useCallback(\r\n        async (value: string) => {\r\n            if (\r\n                !noResolutionModal &&\r\n                resolutionsList.length > 0 &&\r\n                lastStatus &&\r\n                value === lastStatus.customId\r\n            ) {\r\n                setResolutionModalState({ statusId: value, showModal: true });\r\n            } else {\r\n                onChangeStatus(value);\r\n            }\r\n        },\r\n        [\r\n            lastStatus?.customId,\r\n            noResolutionModal,\r\n            onChangeStatus,\r\n            resolutionsList.length,\r\n        ]\r\n    );\r\n\r\n    const getSelectedKeys = () => (statusId ? [statusId] : []);\r\n\r\n    const statusWithColor = (status: IBlockStatus) => (\r\n        <span style={{ borderBottom: `2px solid ${status.color}` }}>\r\n            {status.name}\r\n        </span>\r\n    );\r\n\r\n    const statusListMenu = (\r\n        <Menu\r\n            onClick={(evt) => {\r\n                if (evt.key === ADD_NEW_STATUS_KEY) {\r\n                    onSelectAddNewStatus();\r\n                    return;\r\n                }\r\n\r\n                if (evt.key !== statusId) {\r\n                    handleStatusChange(evt.key as string);\r\n                }\r\n            }}\r\n            selectedKeys={getSelectedKeys()}\r\n        >\r\n            <Menu.Item key={ADD_NEW_STATUS_KEY}>\r\n                <PlusOutlined /> Status\r\n            </Menu.Item>\r\n            <Menu.Divider />\r\n            {statusList.map((status) => {\r\n                return (\r\n                    <Menu.Item key={status.customId}>\r\n                        {statusWithColor(status)}\r\n                    </Menu.Item>\r\n                );\r\n            })}\r\n        </Menu>\r\n    );\r\n\r\n    const selectedStatusElem = (\r\n        <StyledContainer\r\n            s={{\r\n                cursor: disabled ? \"not-allowed\" : \"pointer\",\r\n                display: \"inline-flex\",\r\n                flex: 1,\r\n            }}\r\n        >\r\n            <Space>\r\n                {selectedStatus ? statusWithColor(selectedStatus) : \"Status\"}\r\n                <CaretDownOutlined\r\n                    style={{\r\n                        fontSize: \"10px\",\r\n                        color: disabled ? \"#f5f5f5\" : \"#999\",\r\n                    }}\r\n                />\r\n            </Space>\r\n        </StyledContainer>\r\n    );\r\n\r\n    const resolutionElem = selectedStatusIsLastStatus && (\r\n        <TaskResolution\r\n            resolutionId={resolutionId}\r\n            resolutionsList={resolutionsList}\r\n            resolutionsMap={resolutionsMap}\r\n            onChange={onChangeResolution}\r\n            disabled={disabled}\r\n            onSelectAddNewResolution={onSelectAddNewResolution}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <StyledContainer s={{ flex: 1 }}>\r\n            {resolutionModalState.showModal && (\r\n                <SelectResolutionModal\r\n                    task={task}\r\n                    resolutionsList={resolutionsList}\r\n                    resolutionsMap={resolutionsMap}\r\n                    onContinue={onContinueWithoutResolution}\r\n                    onCancel={onCancel}\r\n                    onSelectResolution={handleResolutionModalChange}\r\n                    onSelectAddNewResolution={onSelectAddNewResolution}\r\n                />\r\n            )}\r\n            <StyledContainer s={{ flex: 1, marginRight: \"6px\" }}>\r\n                <Dropdown\r\n                    disabled={disabled}\r\n                    overlay={statusListMenu}\r\n                    trigger={[\"click\"]}\r\n                    className={className}\r\n                >\r\n                    {selectedStatusElem}\r\n                </Dropdown>\r\n            </StyledContainer>\r\n            {resolutionElem && (\r\n                <React.Fragment>\r\n                    <span\r\n                        style={{\r\n                            padding: \"0 16px\",\r\n                            display: \"inline-flex\",\r\n                            alignItems: \"center\",\r\n                        }}\r\n                    >\r\n                        <Minus style={{ width: \"12px\", height: \"12px\" }} />\r\n                    </span>\r\n                    <StyledContainer\r\n                        s={{\r\n                            flex: 1,\r\n                            marginRight: \"6px\",\r\n                        }}\r\n                    >\r\n                        {resolutionElem}\r\n                    </StyledContainer>\r\n                </React.Fragment>\r\n            )}\r\n        </StyledContainer>\r\n    );\r\n};\r\n\r\nexport default React.memo(TaskStatus);\r\n","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\Priority.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\TaskNameAndDescription.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\TaskStatusContainer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\SelectTaskSprintContainer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\TaskThumbnailDueDate.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\TaskThumbnailAssignees.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\TaskSubTasksContainer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\SubTaskForm.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\SelectResolutionModal.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\TaskResolution.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\TaskThumbnailSubTasks.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\task\\TaskSubTask.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\Message.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\MessageList.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\user\\user.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\collaborator\\UserAvatar.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\comments\\reducer.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\comments\\actions.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\chat\\constants.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\programAccessTokens\\reducer.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\programAccessTokens\\actions.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\comments\\selectors.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\comment\\constants.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\comments\\CommentsContainer.tsx",["1355","1356"],"import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { IBlock } from \"../../models/block/block\";\r\nimport { IComment } from \"../../models/comment/types\";\r\nimport { IUser } from \"../../models/user/user\";\r\nimport BlockSelectors from \"../../redux/blocks/selectors\";\r\nimport CommentSelectors from \"../../redux/comments/selectors\";\r\nimport { addCommentOpAction } from \"../../redux/operations/comments/addComment\";\r\nimport { loadTaskCommentsOpAction } from \"../../redux/operations/comments/loadTaskComments\";\r\nimport { IAppState } from \"../../redux/types\";\r\nimport UserSelectors from \"../../redux/users/selectors\";\r\nimport { getOpData } from \"../hooks/useOperation\";\r\nimport MessageList from \"../MessageList\";\r\nimport LoadingEllipsis from \"../utilities/LoadingEllipsis\";\r\nimport TaskComments from \"./TaskComments\";\r\n\r\nexport interface ICommentsContainerProps {\r\n    taskId: string;\r\n}\r\n\r\nconst CommentsContainer: React.FC<ICommentsContainerProps> = (props) => {\r\n    const { taskId } = props;\r\n    const dispatch = useDispatch();\r\n\r\n    const task = useSelector<IAppState, IBlock>((state) =>\r\n        BlockSelectors.getBlock(state, taskId)\r\n    );\r\n\r\n    const op = task.taskCommentOp;\r\n    const opData = op && getOpData(op);\r\n\r\n    React.useEffect(() => {\r\n        if (!op) {\r\n            dispatch(\r\n                loadTaskCommentsOpAction({\r\n                    taskId: task.customId,\r\n                })\r\n            );\r\n        }\r\n    }, [op]);\r\n\r\n    const org = useSelector<IAppState, IBlock>((state) =>\r\n        BlockSelectors.getBlock(state, task.rootBlockId!)\r\n    );\r\n\r\n    const collaborators = useSelector<IAppState, IUser[]>((state) => {\r\n        if (opData && opData.isCompleted) {\r\n            return UserSelectors.getUsers(state, org.collaborators!);\r\n        }\r\n\r\n        return [];\r\n    });\r\n\r\n    const usersMap = collaborators.reduce((map, collaborator) => {\r\n        map[collaborator.customId] = collaborator;\r\n        return map;\r\n    }, {} as { [key: string]: IUser });\r\n\r\n    const comments = useSelector<IAppState, IComment[]>((state) => {\r\n        if (opData && opData.isCompleted) {\r\n            return CommentSelectors.filter(\r\n                state,\r\n                (comment) => comment.taskId === task.customId\r\n            ).sort((c1, c2) => {\r\n                // TODO: how can we presort\r\n                return (\r\n                    new Date(c1.createdAt).valueOf() -\r\n                    new Date(c2.createdAt).valueOf()\r\n                );\r\n            });\r\n        }\r\n\r\n        return [];\r\n    });\r\n\r\n    const onAddComment = React.useCallback(\r\n        async (comment: string) => {\r\n            dispatch(\r\n                addCommentOpAction({\r\n                    comment,\r\n                    taskId: task.customId,\r\n                })\r\n            );\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    if (opData && opData.isLoading) {\r\n        return <LoadingEllipsis />;\r\n    } else if (opData && opData.error) {\r\n        return <MessageList fill messages={opData.error} />;\r\n    }\r\n\r\n    return (\r\n        <TaskComments\r\n            comments={comments}\r\n            usersMap={usersMap}\r\n            onAddComment={onAddComment}\r\n        />\r\n    );\r\n};\r\n\r\nexport default CommentsContainer;\r\n","C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\comments\\loadTaskComments.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\comments\\addComment.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\comments\\TaskComments.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\comments\\comment.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\comments\\CommentList.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\comments\\CommentInput.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\comments\\schema.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\comments\\Comment.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\serviceWorkerRegistration.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\session\\updateClient.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\pushNotification\\api.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\app\\AppVisibility.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\app\\types.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\net\\pushNotification\\schema.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\appHome\\NotificationsPermissionContainer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\user\\UserSettings.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\models\\messages.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\appHome\\NotificationsPermission.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\user\\UpdateUserDataFormContainer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\user\\NotificationSettingsContainer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\redux\\operations\\session\\updateUser.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\user\\UpdateUserDataForm.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\user\\NotificationSettings.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\user\\validation.ts",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\user\\UpdateClientFormContainer.tsx",[],"C:\\Users\\yword\\Desktop\\projects\\sk\\src\\components\\user\\UpdateClientForm.tsx",[],{"ruleId":"1357","replacedBy":"1358"},{"ruleId":"1359","replacedBy":"1360"},{"ruleId":"1361","severity":1,"message":"1362","line":2,"column":8,"nodeType":"1363","messageId":"1364","endLine":2,"endColumn":13},{"ruleId":"1361","severity":1,"message":"1365","line":10,"column":10,"nodeType":"1363","messageId":"1364","endLine":10,"endColumn":19},{"ruleId":"1361","severity":1,"message":"1366","line":12,"column":35,"nodeType":"1363","messageId":"1364","endLine":12,"endColumn":44},{"ruleId":"1361","severity":1,"message":"1367","line":3,"column":5,"nodeType":"1363","messageId":"1364","endLine":3,"endColumn":20},{"ruleId":"1357","replacedBy":"1358"},{"ruleId":"1359","replacedBy":"1360"},{"ruleId":"1368","severity":1,"message":"1369","line":122,"column":5,"nodeType":"1370","messageId":"1371","endLine":124,"endColumn":6,"fix":"1372"},{"ruleId":"1368","severity":1,"message":"1373","line":126,"column":5,"nodeType":"1370","messageId":"1371","endLine":128,"endColumn":6,"fix":"1374"},{"ruleId":"1361","severity":1,"message":"1375","line":13,"column":8,"nodeType":"1363","messageId":"1364","endLine":13,"endColumn":24},{"ruleId":"1361","severity":1,"message":"1376","line":2,"column":19,"nodeType":"1363","messageId":"1364","endLine":2,"endColumn":24},{"ruleId":"1361","severity":1,"message":"1377","line":2,"column":8,"nodeType":"1363","messageId":"1364","endLine":2,"endColumn":12},{"ruleId":"1357","replacedBy":"1378"},{"ruleId":"1359","replacedBy":"1379"},{"ruleId":"1361","severity":1,"message":"1380","line":2,"column":10,"nodeType":"1363","messageId":"1364","endLine":2,"endColumn":16},{"ruleId":"1361","severity":1,"message":"1375","line":3,"column":8,"nodeType":"1363","messageId":"1364","endLine":3,"endColumn":24},{"ruleId":"1361","severity":1,"message":"1381","line":4,"column":8,"nodeType":"1363","messageId":"1364","endLine":4,"endColumn":13},{"ruleId":"1361","severity":1,"message":"1375","line":16,"column":8,"nodeType":"1363","messageId":"1364","endLine":16,"endColumn":24},{"ruleId":"1361","severity":1,"message":"1382","line":669,"column":11,"nodeType":"1363","messageId":"1364","endLine":669,"endColumn":25},{"ruleId":"1383","severity":1,"message":"1384","line":84,"column":8,"nodeType":"1385","endLine":84,"endColumn":37,"suggestions":"1386"},{"ruleId":"1383","severity":1,"message":"1387","line":99,"column":9,"nodeType":"1385","endLine":104,"endColumn":10,"suggestions":"1388"},{"ruleId":"1383","severity":1,"message":"1389","line":40,"column":8,"nodeType":"1385","endLine":40,"endColumn":12,"suggestions":"1390"},{"ruleId":"1383","severity":1,"message":"1391","line":85,"column":9,"nodeType":"1385","endLine":85,"endColumn":19,"suggestions":"1392"},"no-native-reassign",["1393"],"no-negated-in-lhs",["1394"],"@typescript-eslint/no-unused-vars","'merge' is defined but never used.","Identifier","unusedVar","'seedBlock' is defined but never used.","'mergeData' is defined but never used.","'commentFragment' is defined but never used.","no-useless-computed-key","Unnecessarily computed property [\"&:last-of-type\"] found.","Property","unnecessarilyComputedProperty",{"range":"1395","text":"1396"},"Unnecessarily computed property [\"&:hover\"] found.",{"range":"1397","text":"1398"},"'OperationActions' is defined but never used.","'Space' is defined but never used.","'path' is defined but never used.",["1393"],["1394"],"'Avatar' is defined but never used.","'store' is defined but never used.","'renderComments' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useCallback has an unnecessary dependency: 'handleResolutionModalChange'. Either exclude it or remove the dependency array.","ArrayExpression",["1399"],"React Hook React.useCallback has a missing dependency: 'lastStatus'. Either include it or remove the dependency array.",["1400"],"React Hook React.useEffect has missing dependencies: 'dispatch' and 'task.customId'. Either include them or remove the dependency array.",["1401"],"React Hook React.useCallback has a missing dependency: 'task.customId'. Either include it or remove the dependency array.",["1402"],"no-global-assign","no-unsafe-negation",[4230,4248],"\"&:last-of-type\"",[4292,4303],"\"&:hover\"",{"desc":"1403","fix":"1404"},{"desc":"1405","fix":"1406"},{"desc":"1407","fix":"1408"},{"desc":"1409","fix":"1410"},"Update the dependencies array to be: []",{"range":"1411","text":"1412"},"Update the dependencies array to be: [lastStatus, noResolutionModal, onChangeStatus, resolutionsList.length]",{"range":"1413","text":"1414"},"Update the dependencies array to be: [dispatch, op, task.customId]",{"range":"1415","text":"1416"},"Update the dependencies array to be: [dispatch, task.customId]",{"range":"1417","text":"1418"},[2686,2715],"[]",[3184,3329],"[lastStatus, noResolutionModal, onChangeStatus, resolutionsList.length]",[1476,1480],"[dispatch, op, task.customId]",[2847,2857],"[dispatch, task.customId]"]